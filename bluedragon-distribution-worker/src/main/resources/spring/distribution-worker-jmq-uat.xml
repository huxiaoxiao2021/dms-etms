<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jmq="http://code.jd.com/schema/jmq"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.jd.com/schema/jmq
	    http://code.jd.com/schema/jmq/jmq-1.1.xsd">

	<!-- jmq transport配置区 -->
	<jmq:transport id="jmq.BlueDragonDistribution.transport"
	address="${jmq.BlueDragonDistribution.address}" user="${jmq.BlueDragonDistribution.user}"
	password="${jmq.BlueDragonDistribution.password}" app="${jmq.BlueDragonDistribution.app}" />

    <!--dmsWeb mq消费应用-->
    <jmq:transport id="jmq.dmsWeb.transport"
                   address="${jmq.dmsWeb.address}" user="${jmq.dmsWeb.user}"
                   password="${jmq.dmsWeb.password}" app="${jmq.dmsWeb.app}" />

	<jmq:transport id="jmq.BlueDragonDistributionStock.transport"
		address="${jmq.BlueDragonDistributionStock.address}" user="${jmq.BlueDragonDistributionStock.user}"
		password="${jmq.BlueDragonDistributionStock.password}" app="${jmq.BlueDragonDistributionStock.app}" />

	<jmq:transport id="jmq.BlueDragonDistributionPop.transport"
		address="${jmq.BlueDragonDistributionPop.address}" user="${jmq.BlueDragonDistributionPop.user}"
		password="${jmq.BlueDragonDistributionPop.password}" app="${jmq.BlueDragonDistributionPop.app}" />

    <jmq:transport id="jmq.dmsWorker.transport" address="${jmq.dmsWorker.address}" user="${jmq.dmsWorker.user}"
                   password="${jmq.dmsWorker.password}" app="${jmq.dmsWorker.producer.app}"/>

    <!-- 重复运单bug处理 临时消费-->
    <jmq:transport id="jmq.dmsWorkAgainJm2.transport" address="${jmq.dmsWorkAgainJm2.address}" user="${jmq.dmsWorkAgainJm2.user}"
                   password="${jmq.dmsWorkAgainJm2.password}" app="${jmq.dmsWorkAgainJm2.producer.app}"/>

    <!--UAT特殊配置  uatDmsWeb mq应用-->
    <jmq:transport id="jmq.uatDmsWeb.transport"
                   address="${jmq.uatDmsWeb.address}" user="${jmq.uatDmsWeb.user}"
                   password="${jmq.uatDmsWeb.password}" app="${jmq.uatDmsWeb.app}" />
    <!--UAT特殊配置  uatDmsWork mq应用-->
    <jmq:transport id="jmq.uatDmsWork.transport"
                   address="${jmq.uatDmsWork.address}" user="${jmq.uatDmsWork.user}"
                   password="${jmq.uatDmsWork.password}" app="${jmq.uatDmsWork.app}" />

    <jmq:transport id="jmq.dmsWorkerForTibet.transport" address="${jmq.dmsWorkerForTibet.address}" user="${jmq.dmsWorkerForTibet.user}"
                   password="${jmq.dmsWorkerForTibet.password}" app="${jmq.dmsWorkerForTibet.app}"/>

    <!--########################  JMQ4配置  #############################################-->
    <jmq:transport id="jmq4.dmsWeb.transport"
                   address="${jmq4.dmsWeb.address}"
                   user="${jmq4.dmsWeb.user}"
                   password="${jmq4.dmsWeb.password}"
                   app="${jmq4.dmsWeb.app}" />

    <jmq:transport id="jmq4.dmsWorker.transport"
                   address="${jmq4.dmsWorker.address}"
                   user="${jmq4.dmsWorker.user}"
                   password="${jmq4.dmsWorker.password}"
                   app="${jmq4.dmsWorker.app}"/>
    <!--########################  JMQ4配置  #############################################-->

	<!-- jmq 消费客户端配置区 -->
    <!-- 一车一单发车 -->
    <!-- 一车一单发车 -->
    <jmq:consumer id="jmq.sendCarConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.vos.send.car}" listener="sendCarConsumer"/>
    </jmq:consumer>

    <!-- 一车一单取消发车 -->
    <jmq:consumer id="jmq.cancelSendCarConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.vos.cancel.send}" listener="cancelSendCarConsumer"/>
    </jmq:consumer>


    <!-- 消费龙门架扫描MQ added by zhanglei -->
    <jmq:consumer id="jmq.gantryScanPackageConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.bd.gantry.scan.package}" listener="gantryScanPackageConsumer"/>
    </jmq:consumer>

    <!-- TMS发车报文 createed by wzx-->
    <jmq:consumer id="jmq.carScheduleFromTMSConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.cargovolume.inbound}" listener="carScheduleFromTMSConsumer"/>
    </jmq:consumer>

    <!-- TMS取消发车报文 create by wzx -->
    <jmq:consumer id="jmq.cancelScheduleFromTMSConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.cancel.sendcar}" listener="cancelScheduleFromTMSConsumer"/>
    </jmq:consumer>

    <bean id="sortSchemeConsumer" class="com.jd.bluedragon.distribution.consumer.sortScheme.SortSchemeConsumer">
        <property name="stores">
            <list>
                <value>6,6,80</value>
                <value>006,006,080</value>
            </list>
        </property>
    </bean>

    <!-- 消费运输非常准起飞降落时间 -->
    <jmq:consumer id="jmq.arAirFlightRealTimeConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.air.flight.realtime.status}" listener="arAirFlightRealTimeConsumer"/>
    </jmq:consumer>

    <!-- B网半收终端提交协商再投MQ -->
    <jmq:consumer id="jmq.packageHalfApproveConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.bd.waybill.w.check}" listener="packageHalfApproveConsumer"/>
    </jmq:consumer>

    <!-- 三无寄托物核实-->
    <jmq:consumer id="jmq.abnormalUnknownReceiveConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dms.unknown.verify.feedback}" listener="dmsAbnormalUnknownConsumer"/>
    </jmq:consumer>

    <jmq:consumer id="jmq.operateHintTrackConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.operateHint.track}" listener="operateHintTrackConsumer"/>
    </jmq:consumer>

    <!-- 消费发货明细MQ 用于RMA项目打印 -->
    <jmq:consumer id="jmq.sendDetailConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dmsWorkSendDetail}" listener="sendDetailConsumer"/>
    </jmq:consumer>

    <!-- B网半收终端提交协商再投MQ -->
    <jmq:consumer id="jmq.packingConsumableConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.bd.pack.sync.waybill}" listener="packingConsumableConsumer"/>
    </jmq:consumer>
    <!--履约单剔除消息-->
    <jmq:consumer id="jmq.performanceRemoveConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.waybill.order.flag}" listener="performanceRemoveConsumer"/>
    </jmq:consumer>



    <!-- 消费取消发货明细MQ 用于取消打印交接清单数据 -->
    <jmq:consumer id="jmq.cancelSendDetailPrintHandoverConsumer" transport="jmq.uatDmsWork.transport">
        <jmq:listener topic="${jmq.topic.bd.dms.delivery.cancel.send}" listener="cancelSendDetailPrintHandoverConsumer"/>
    </jmq:consumer>

    <!-- 空铁转陆运 提报异常 -->
    <jmq:consumer id="jmq.arAbnormalConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.arAbnormal}" listener="arAbnormalConsumer"/>
    </jmq:consumer>

    <!--盘点任务完成-->
    <jmq:consumer id="jmq.inventoryTaskCompleteConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dms.inventory.task.complete}" listener="inventoryTaskCompleteConsumer"/>
    </jmq:consumer>

    <!-- 消费循环集包袋处理 用于组织通知下游的MQ -->
    <jmq:consumer id="jmq.deliverGoodsNoticeConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.cb.deliverGoodsNotice.info}" listener="deliverGoodsNoticeConsumer"/>
    </jmq:consumer>

    <!--抽检回传信息-->
    <jmq:consumer id="jmq.spotCheckConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dms.spot.check}" listener="spotCheckConsumer"/>
    </jmq:consumer>

    <!--线上签推送数据-->
    <jmq:consumer id="jmq.printOnlineConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.print.online}" listener="printOnlineConsumer"/>
    </jmq:consumer>
    <!--分拣滞留-->
    <jmq:consumer id="jmq.strandConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.strand.report}" listener="strandConsumer"/>
    </jmq:consumer>
    <!--调度信息数据-->
    <jmq:consumer id="jmq.bdWaybillScheduleMqConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.bdWaybillScheduleMqListener}" listener="bdWaybillScheduleMqListener"/>
    </jmq:consumer>
    <!--企配仓信息数据-->
    <jmq:consumer id="jmq.ednFahuoMsgMqConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.ednFahuoMsgMqListener}" listener="ednFahuoMsgMqListener"/>
    </jmq:consumer>
    <!--分拣工作台一键封车任务-->
    <jmq:consumer id="jmq.sealVehicleFromWorkbenchConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dms.wb.seal.vehicle}" listener="sealVehicleFromWorkbenchConsumer"/>
    </jmq:consumer>
    <!--银行单号异步导出-->
    <jmq:consumer id="jmq.waybilCodeCheckExportLogConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.waybill.check.exportlog}" listener="waybilCodeCheckExportLogConsumer"/>
    </jmq:consumer>
    <!-- 来自异常系统的可换单消息 -->
    <jmq:consumer id="jmq.waybillSiteTrackConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.otherSystem.exception.waybillSiteTrack}" listener="waybillSiteTrackConsumer"/>
    </jmq:consumer>

    <!--  众邮箱号回传重量处理消息  -->
    <jmq:consumer id="jmq.thirdBoxWeightConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.third.box.weight.deal}" listener="ThirdBoxWeightConsumer"/>
    </jmq:consumer>

    <!--龙门架驻厂扫描消息-->
    <jmq:consumer id="jmq.gantryResidentScanConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.gantryResidentScan}" listener="gantryResidentScanConsumer" />
    </jmq:consumer>

    <!-- 装车发货任务消费 -->
    <jmq:consumer id="jmq.goodsLoadTaskConsume" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.goods.load.task.deal}" listener="goodsLoadTaskConsume"/>
    </jmq:consumer>

    <!-- 装车发货包裹消费 -->
    <jmq:consumer id="jmq.goodsLoadPackageConsume" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.goods.load.package.deal}" listener="goodsLoadPackageConsume"/>
    </jmq:consumer>

    <!--  包裹验货消息  -->
    <jmq:consumer id="jmq.inspectionPackageConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dms.package.inspection}" listener="inspectionPackageConsumer" />
    </jmq:consumer>

    <!--快运暂存发货信息-->
    <jmq:consumer id="jmq.kyStorageSendConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.kyStorageSend}" listener="kyStorageSendConsumer"/>
    </jmq:consumer>

    <!-- 业务操作拦截原始动作记录 -->
    <jmq:consumer id="jmq.businessOperateInterceptActionConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.business.operate.intercept.action.send}" listener="businessOperateInterceptActionConsumer"/>
    </jmq:consumer>
    <!-- 拦截后处理原始动作数据消息 -->
    <jmq:consumer id="jmq.disposeActionAfterInterceptConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.business.operate.disposeActionAfterIntercept.send}" listener="disposeActionAfterInterceptConsumer"/>
    </jmq:consumer>
    <!-- 离线操作任务上传后发出mq消息 -->
    <jmq:consumer id="jmq.offlineTaskCheckBusinessInterceptConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.business.operate.offline.task.send}" listener="offlineTaskCheckBusinessInterceptConsumer"/>
    </jmq:consumer>
    <!--tms线路数据消费-->
    <jmq:consumer id="jmq.tmsVehicleRouteStatusConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tmsVehicleRouteStatus}" listener="tmsVehicleRouteStatusConsumer"/>
    </jmq:consumer>
    <!--经济网按箱称重分页消息监听-->
    <jmq:consumer id="jmq.economicNetBoxSplitWeightConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.economicNet.box.split.weight}" listener="economicNetBoxSplitWeightConsumer"/>
    </jmq:consumer>
    <!--统一称重量方消息监听-->
    <jmq:consumer id="jmq.dmsWeightVolumeFlowConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dms.weight.volume.flow}" listener="dmsWeightVolumeFlowConsumer"/>
    </jmq:consumer>
    <!--tms任务取消消费-->
    <jmq:consumer id="jmq.tmsVehicleJobCancelConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tmsVehicleJobCancel}" listener="tmsVehicleJobCancelConsumer"/>
    </jmq:consumer>

    <!-- 消费发货消息处理打印交接清单数据 -->
    <jmq:consumer id="jmq.dmsWorkSendDetailConsumer" transport="jmq.uatDmsWork.transport">
        <jmq:listener topic="${jmq.topic.dmsWorkSendDetail}" listener="dmsWorkSendDetailConsumer"/>
    </jmq:consumer>
    <!--冷链验货消费-->
    <jmq:consumer id="jmq.coldChainInspectionConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.coldChainInspection}" listener="coldChainInspectionConsumer"/>
    </jmq:consumer>
    <!--冷链发货消费-->
    <jmq:consumer id="jmq.coldChainSendConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.coldChainSend}" listener="coldChainSendConsumer"/>
    </jmq:consumer>
    <!--冷链快运发货消费-->
    <jmq:consumer id="jmq.coldChainSendOfKYConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.oldChainSendOfKY}" listener="coldChainSendOfKYConsumer"/>
    </jmq:consumer>
    <!--站点名称变更消费-->
    <jmq:consumer id="jmq.baseSiteChangeConsumer" transport="jmq.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.baseSiteChange}" listener="baseSiteChangeConsumer"/>
    </jmq:consumer>

    <!-- 消费发货明细MQ 给ITMS系统发送发货数据 -->
    <jmq:consumer id="jmq.tibetSendDetailConsumer" transport="jmq.dmsWorkerForTibet.transport">
        <jmq:listener topic="${jmq.topic.dmsWorkSendDetail}" listener="tibetSendDetailConsumer"/>
    </jmq:consumer>

    <!-- 消费取消发货明细MQ 给ITMS系统发送取消发货数据 -->
    <jmq:consumer id="jmq.tibetCancelSendDetailConsumer" transport="jmq.dmsWorkerForTibet.transport">
        <jmq:listener topic="${jmq.topic.bd.dms.delivery.cancel.send}" listener="tibetCancelSendDetailConsumer"/>
    </jmq:consumer>
    <!-- 消费无预分拣站点刷新数据 -->
    <jmq:consumer id="jmq.dmsHasnoPresiteWaybillMqListener" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dmsHasnoPresiteWaybillMq}" listener="dmsHasnoPresiteWaybillMqListener"/>
    </jmq:consumer>
    <!-- dws抽检处理消费 -->
    <jmq:consumer id="jmq.dmsSpotCheckDealConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dwsSpotCheck}" listener="dmsSpotCheckDealConsumer"/>
    </jmq:consumer>
    <!--质控异常提报mq消费-->
    <jmq:consumer id="jmq.qcAbnormalReportReportConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.abnormalRecordReport}" listener="qcAbnormalReportReportConsumer"/>
    </jmq:consumer>
    <jmq:consumer id="jmq.qcAbnormalReportOutCallReportConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.abnormalRecordOutCallReport}" listener="qcAbnormalReportOutCallReportConsumer"/>
    </jmq:consumer>

    <!-- 抽检回传消息处理 -->
    <jmq:consumer id="jmq.spotCheckNotifyConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.spotCheckNotify}" listener="spotCheckNotifyConsumer"/>
    </jmq:consumer>

    <!-- 抽检-设备图片AI识别回传消息处理 -->
    <jmq:consumer id="jmq.dwsAIDistinguishNotifyConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.dwsAIDistinguish.Notify.uat}" listener="dwsAIDistinguishNotifyConsumer"/>
    </jmq:consumer>

    <!-- dws抽检图片下发AI处理消息消费 -->
    <jmq:consumer id="jmq.dwsIssueDealConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.spotCheck.dwsIssueDeal}" listener="dwsIssueDealConsumer"/>
    </jmq:consumer>

    <!--B2B-TMS企配仓运单调度信息-->
    <jmq:consumer id="jmq.b2bWaybillScheduleMqListener" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.b2b.tms.bd.schedule.result}" listener="b2bWaybillScheduleMqListener"/>
    </jmq:consumer>

    <!--运输状态消息-->
    <jmq:consumer id="jmq.tmsSealCarStatusConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.seal.car.status}" listener="tmsSealCarStatusConsumer"/>
    </jmq:consumer>
    <!--运输取消封车消息-->
    <jmq:consumer id="jmq.tmsCancelSealCarBatchConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.cancel.seal.car.batch}" listener="tmsCancelSealCarBatchConsumer"/>
    </jmq:consumer>
    <!--运输司机到达消息-->
    <jmq:consumer id="jmq.tmsTransWorkCarArriveConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.trans.work.car.arrive}" listener="tmsTransWorkCarArriveConsumer"/>
    </jmq:consumer>
    <!--运输始发场地车辆到来消息-->
    <jmq:consumer id="jmq.tmsTransWorkCarComeConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.trans.work.car.come}" listener="tmsTransWorkCarComeConsumer"/>
    </jmq:consumer>
    <!--运输始发场地车辆即将到来消息-->
    <jmq:consumer id="jmq.tmsAreaNearNoticeForBeginNodeConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.tms.area.work.near.notice.begin}" listener="tmsAreaNearNoticeForBeginNodeConsumer"/>
    </jmq:consumer>
    <!--运输司机到达消息-->
    <jmq:consumer id="jmq.tmsVehicleDetailStatusConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.vehicle.detail.status}" listener="tmsVehicleDetailStatusConsumer"/>
    </jmq:consumer>

    <!--  运输派车明细消息  -->
    <jmq:consumer id="jmq.tmsTransWorkItemOperateConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.tms.workItem.operate}" listener="tmsTransWorkItemOperateConsumer"/>
    </jmq:consumer>

    <!--  接收卸车任务  -->
    <jmq:consumer id="jmq.initUnloadVehicleConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.jy.flink.unload}" listener="initUnloadVehicleConsumer"/>
    </jmq:consumer>

    <!--  拣运卸车扫描  -->
    <jmq:consumer id="jmq.jyUnloadScanConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.unload.scan}" listener="jyUnloadScanConsumer"/>
    </jmq:consumer>

    <!--  拣运卸车完成  -->
    <jmq:consumer id="jmq.jyUnloadTaskCompleteConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.unload.complete}" listener="jyUnloadTaskCompleteConsumer"/>
    </jmq:consumer>

    <!--  运输封车任务预计到达时间  -->
    <jmq:consumer id="jmq.tmsJdiTransWorkItemEstimateArriveTimeConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.tms.jdi.trans.work.item.estimate.arrive.time}" listener="tmsJdiTransWorkItemEstimateArriveTimeConsumer"/>
    </jmq:consumer>

    <!-- 保温箱逆向处理 -->
    <jmq:consumer id="jmq.dealMiniStoreOutConsumer" transport="jmq.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.box.inOut}" listener="dealMiniStoreOutConsumer"/>
    </jmq:consumer>

    <!--  面单举报回传消息处理  -->
    <jmq:consumer id="jmq.faceReportNotifyConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.face.report.notify}" listener="faceReportNotifyConsumer"/>
    </jmq:consumer>
    <!--  任务调度通知消息  -->
    <jmq:consumer id="jmq.jyScheduleTaskConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.schedule.task.notify}" listener="jyScheduleTaskNotifyConsumer"/>
    </jmq:consumer>
    <!--  三无匹配结果通知消息  -->
    <jmq:consumer id="jmq.jyExpefNotifyConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.expef.notify}" listener="jyExpefNotifyConsumer"/>
    </jmq:consumer>
    <!--  三无包裹补打成功消息  -->
    <jmq:consumer id="jmq.packageCodePrintConsumer" transport="jmq.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.packageRePrintProducer}" listener="packageCodePrintConsumer"/>
    </jmq:consumer>
    <!--  组板发货岗统计消息  -->
    <jmq:consumer id="jmq.jyAggsConsumer" transport="jmq4.dmsWeb.transport">
        <jmq:listener topic="${jmq.topic.jy.aggs}" listener="jyAggsConsumer"/>
    </jmq:consumer>

    <jmq:consumer id="jmq.jyAggsConsumerMain" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.aggs}" listener="jyAggsConsumerMain"/>
    </jmq:consumer>

    <jmq:consumer id="jmq.jyAggsConsumerSlave" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.aggs.slave}" listener="jyAggsConsumerSlave"/>
    </jmq:consumer>

    <!--  车辆到达消息处理  -->
    <jmq:consumer id="jmq.sendCarArriveStatusConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.send.car.arrive.status}" listener="sendCarArriveStatusConsumer"/>
    </jmq:consumer>
    <!--  拣运组板岗-运单异步取消组板  -->
    <jmq:consumer id="jmq.waybillCancelComboardConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.waybill.cancel.comboard}" listener="waybillCancelComboardConsumer"/>
    </jmq:consumer>

    <!--  拣运组板岗-运单异步组板发货  -->
    <jmq:consumer id="jmq.waybillComboardConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.waybill.comboard}" listener="waybillComboardConsumer"/>
    </jmq:consumer>

    <!--  拣运组板岗-运单异步取消组板发货  -->
    <jmq:consumer id="jmq.cancelComboardSendConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.cancel.comboard.send}" listener="cancelComboardSendConsumer"/>
    </jmq:consumer>

    <!--  jy转运卸车任务板关系创建消费 -->
    <jmq:consumer id="jmq.jyUnloadTaskBoardRelationGenerateConsume" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.unload.task.board.relation}" listener="jyUnloadTaskBoardRelationGenerateConsume"/>
    </jmq:consumer>

    <!-- 设备位置上传消息处理 -->
    <jmq:consumer id="jmq.dmsUploadDeviceLocationConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.dmsUploadDeviceLocation}" listener="dmsUploadDeviceLocationConsumer"/>
    </jmq:consumer>
    <!-- 设备操作位置异常上传消息处理 -->
    <jmq:consumer id="jmq.dmsUploadDeviceLocationExceptionOpConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.dmsUploadDeviceLocationExceptionOp}" listener="dmsUploadDeviceLocationExceptionOpConsumer"/>
    </jmq:consumer>

    <!--  分拣发邮政消息处理  -->
    <jmq:consumer id="jmq.dmsSendToEmsWaybillInfoConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.dmsSendToEmsWaybillInfo}" listener="dmsSendToEmsWaybillInfoConsumer"/>
    </jmq:consumer>

    <!--  dws称重量方校准消息处理  -->
    <jmq:consumer id="jmq.dwsWeightVolumeCalibrateConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.dws.calibrate}" listener="dwsWeightVolumeCalibrateConsumer"/>
    </jmq:consumer>
    <!--  dws校准超时任务发送咚咚消息处理  -->
    <jmq:consumer id="jmq.dwsCalibratePushDDConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.dws.calibrate.pushDD}" listener="dwsCalibratePushDDConsumer"/>
    </jmq:consumer>
    <!--  dws设备校准更新抽检消息  -->
    <jmq:consumer id="jmq.dwsCalibrateDealSpotCheckConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.dws.calibrate.dealSpotCheck}" listener="dwsCalibrateDealSpotCheckConsumer"/>
    </jmq:consumer>
    <!--auto下发图片信息-->
    <jmq:consumer id="jmq.syncPictureInfoConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.auto.syncPictureInfo}" listener="syncPictureInfoConsumer"/>
    </jmq:consumer>

    <!--  发货统计消息处理  -->
    <jmq:consumer id="jmq.jySendGoodsAggsMainConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.send.goods.aggs}" listener="jySendGoodsAggsMainConsumer"/>
    </jmq:consumer>

    <!--  发货备库统计消息处理  -->
    <jmq:consumer id="jmq.jySendGoodsAggsBakConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.send.goods.aggs.bak}" listener="jySendGoodsAggsBakConsumer"/>
    </jmq:consumer>

    <!--  卸车统计消息处理  -->
    <jmq:consumer id="jmq.jyUnloadCarAggsMainConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.unload.car.aggs}" listener="jyUnloadCarAggsMainConsumer"/>
    </jmq:consumer>

    <!--  卸车统计备库消息处理  -->
    <jmq:consumer id="jmq.jyUnloadCarAggsBakConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.unload.car.aggs.bak}" listener="jyUnloadCarAggsBakConsumer"/>
    </jmq:consumer>

    <!--  发货产品统计消息处理  -->
    <jmq:consumer id="jmq.jySendProductAggsMainConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.send.product.aggs}" listener="jySendProductAggsMainConsumer"/>
    </jmq:consumer>

    <!--  发货产品备库统计消息处理  -->
    <jmq:consumer id="jmq.jySendProductAggsBakConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.send.product.aggs.bak}" listener="jySendProductAggsBakConsumer"/>
    </jmq:consumer>

    <!--  重复运单取消拦截bug修复  -->
    <jmq:consumer id="jmq.repeatWaybillCodeCanceltConsumer" transport="jmq.dmsWorkAgainJm2.transport">
        <jmq:listener topic="${jmq.topic.packageRePrintProducer}" listener="repeatWaybillCodeCanceltConsumer"/>
    </jmq:consumer>

    <!--  换单打印消费  -->
    <jmq:consumer id="jmq.changeOrderPrintConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.change.order.print}" listener="changeOrderPrintConsumer"/>
    </jmq:consumer>

    <!-- 作业工作台自动关闭任务 -->
    <jmq:consumer id="jmq.jyBizTaskAutoCloseConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.biz.task.autoClose}" listener="jyBizTaskAutoCloseConsumer"/>
    </jmq:consumer>

    <!--  装车评价报表加工消费  -->
    <jmq:consumer id="jmq.jyEvaluateTargetInitConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.evaluate.target.init}" listener="jyEvaluateTargetInitConsumer"/>
    </jmq:consumer>

    <!--  周转筐批量作废异步处理  -->
    <jmq:consumer id="jmq.recycleBasketAbolishConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.recycleBasket.batchAbolish}" listener="recycleBasketAbolishConsumer"/>
    </jmq:consumer>
    <!-- 集齐初始化拆分批消费 -->
    <jmq:consumer id="jmq.jyCollectDataInitSplitConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.collect.data.init.split}" listener="jyCollectDataInitSplitConsumer"/>
    </jmq:consumer>
    <!-- 集齐数据批量修改 -->
    <jmq:consumer id="jmq.jyCollectBatchUpdateStatusConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.collect.status.batch.update}" listener="jyCollectBatchUpdateStatusConsumer"/>
    </jmq:consumer>
    <!-- 集齐拆分批初始化消费 -->
    <jmq:consumer id="jmq.JyCollectDataSplitBatchInitConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.collect.data.page.init}" listener="JyCollectDataSplitBatchInitConsumer"/>
    </jmq:consumer>
    <!-- 集齐数据批量修改按运单拆分 -->
    <jmq:consumer id="jmq.jyCollectStatusBatchUpdateWaybillSplitConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.collect.status.batch.update.split}" listener="jyCollectStatusBatchUpdateWaybillSplitConsumer"/>
    </jmq:consumer>
    <!--  验货修改集齐状态补偿方案  -->
    <jmq:consumer id="jmq.jyInspectUpdateCollectStatusConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.inspect.update.collect.status}" listener="jyInspectUpdateCollectStatusConsumer"/>
    </jmq:consumer>
    <jmq:consumer id="jmq.tmsItemSimpleCodeConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.tms.item.simple.code}" listener="tmsItemSimpleCodeConsumer"/>
    </jmq:consumer>

    <!--  拣运-滞留扫描容器处理消费  -->
    <jmq:consumer id="jmq.jyStrandScanContainerDealConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.strandScan.containerDeal}" listener="jyStrandScanContainerDealConsumer"/>
    </jmq:consumer>
    <!--  拣运-滞留:运输驳回自建滞留任务  -->
    <jmq:consumer id="jmq.transportRejectAddCarApplyConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.strand.transportReject}" listener="transportRejectAddCarApplyConsumer"/>
    </jmq:consumer>
    <!--  人资考勤数据-topic自动签退
    <jmq:consumer id="jmq.attendDetailChangeFenjianTopicConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.attendDetailChangeFenjianTopic}" listener="attendDetailChangeTopicConsumer"/>
    </jmq:consumer>  -->
    <!--  线上化管理-任务配置
    <jmq:consumer id="jmq.workGridManagerTaskConfigMqConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.workGridManagerTaskConfigMq}" listener="workGridManagerTaskConfigMqConsumer"/>
    </jmq:consumer>-->
    <!-- 德邦返调度消息处理 -->
    <jmq:consumer id="jmq.debonReturnScheduleConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.debon.return.schedule}" listener="debonReturnScheduleConsumer"/>
    </jmq:consumer>

    <!--  拣运开放平台发货消息消费  -->
    <jmq:consumer id="jmq.jyOpenPlatformSendConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.open.platform.send}" listener="jyOpenPlatformSendConsumer"/>
    </jmq:consumer>
    <!--  拣运开放平台发货完成消息消费  -->
    <jmq:consumer id="jmq.jyOpenPlatformSendFinishConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.open.platform.sendFinish}" listener="jyOpenPlatformSendFinishConsumer"/>
    </jmq:consumer>


    <!--  异常-报废审批处理自消费  -->
    <jmq:consumer id="jmq.dmsExScrapApproveSelfConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.syncScrapApprove}" listener="dmsExScrapApproveSelfConsumer"/>
    </jmq:consumer>

    <!--  异常-报废通知消费  -->
    <jmq:consumer id="jmq.dmsExScrapNoticeConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.scrapNotice}" listener="dmsExScrapNoticeConsumer"/>
    </jmq:consumer>

    <!--  异常-未领取超时任务通知消费  -->
    <jmq:consumer id="jmq.dmsExUnCollectOverTimeNoticeConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.unCollectOverTimeNotice}" listener="dmsExUnCollectOverTimeNoticeConsumer"/>
    </jmq:consumer>

    <!--  异常-客服回传消费  -->
    <jmq:consumer id="jmq.dmsExCustomerNotifyConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.customerNotify}" listener="dmsExCustomerNotifyConsumer"/>
    </jmq:consumer>
    <!-- 拣运扫描集齐-新 -->
    <jmq:consumer id="jmq.jyScanCollectConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.scan.collect}" listener="jyScanCollectConsumer"/>
    </jmq:consumer>
    <!-- 拣运取消扫描集齐 -->
    <jmq:consumer id="jmq.jyCancelScanCollectConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.cancel.scan.collect}" listener="jyCancelScanCollectConsumer"/>
    </jmq:consumer>
    <!-- 拣运取消扫描 -->
    <jmq:consumer id="jmq.jyCancelScanConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jy.cancel.scan}" listener="jyCancelScanConsumer"/>
    </jmq:consumer>

    <!--  异常破损-客服回传消费  -->
    <jmq:consumer id="jmq.dmsExpCustomerReturnConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.customerReturn}" listener="dmsExpCustomerReturnConsumer"/>
    </jmq:consumer>


    <!--运单妥投-->
    <jmq:consumer id="jmq.dmsExpWaybillDeliveryConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.waybill.bd.dlok.flag}" listener="dmsExpWaybillDeliveryConsumer"/>
    </jmq:consumer>
    <!--运单拒收-->
    <jmq:consumer id="jmq.dmsExpWaybillRefuseConsumer" transport="jmq.uatDmsWeb.transport">
        <jmq:listener topic="${jmq.topic.waybill.bd_refuse_flag}" listener="dmsExpWaybillRefuseConsumer"/>
    </jmq:consumer>

    <!--  网格删除mq消费  -->
    <jmq:consumer id="jmq.workGridModifyMqConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.workGridModifyMq}" listener="workGridModifyMqConsumer"/>
    </jmq:consumer>
    <!-- 拣运发货流向纬度首次扫描 -->
    <jmq:consumer id="jmq.jyTaskSendDetailFirstSendConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jyTaskSendDetailFirstSend}" listener="jyTaskSendDetailFirstSendConsumer"/>
    </jmq:consumer>
    <!-- 违禁品上报消息处理 -->
    <jmq:consumer id="jmq.jyExceptionContrabandUploadConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.exception.contraband.upload}" listener="jyExceptionContrabandUploadConsumer"/>
    </jmq:consumer>
    <!--  操作流水mq消费  -->
    <jmq:consumer id="jmq.jyOperateFlowMqConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jyOperateFlowMq}" listener="jyOperateFlowMqConsumer"/>
    </jmq:consumer>

    <!-- 运输通知司机节点 -->
    <jmq:consumer id="jmq.tmsTransWorkDriverNodeConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.tmsTransWorkDriverNode}" listener="tmsTransWorkDriverNodeConsumer"/>
    </jmq:consumer>
    <!-- 作业APP促发运输催派车辆 -->
    <jmq:consumer id="jmq.jySendTmsUrgeVehicleConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.jySendTmsUrgeVehicle}" listener="jySendTmsUrgeVehicleConsumer"/>
    </jmq:consumer>
    <!-- app登录信息消费  -->
    <jmq:consumer id="jmq.loginInfoConsumer" transport="jmq4.dmsWorker.transport">
        <jmq:listener topic="${jmq.topic.login.info}" listener="LoginInfoConsumer"/>
    </jmq:consumer>
</beans>

