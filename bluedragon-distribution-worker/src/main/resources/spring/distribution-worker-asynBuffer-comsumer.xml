<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jmq="http://code.jd.com/schema/jmq"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.jd.com/schema/jmq
	    http://code.jd.com/schema/jmq/jmq-1.0.xsd
	    http://www.springframework.org/schema/util
	    http://www.springframework.org/schema/util/spring-util.xsd">
	    <!-- 多级异步缓冲组件配置，集成了消息中间件JMQ和定时调度器tbschedule -->
	    
	    <!-- task任务处理器转为消费jmq消息配置 -->
	    <bean id="simpleTaskProcessorJMQRouter" class="com.jd.ql.framework.asynBuffer.comsumer.SimpleTaskProcessorJMQRouter">
	    	<constructor-arg name="mapping">
	    		<map>
                    <!-- 逆向备件库 -->
	    			<entry key="${jmq.task.topic.reverse.spare.dms}">
	    				<bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
	    					<constructor-arg name="target" ref="reverseSpareService"></constructor-arg>
	    					<constructor-arg name="methodName" value="doReverseSpareTask"></constructor-arg>
	    				</bean>
	    			</entry>
                    <entry key="${jmq.task.topic.reverse.spare.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target" ref="reverseSpareService"></constructor-arg>
                            <constructor-arg name="methodName" value="doReverseSpareTask"></constructor-arg>
                        </bean>
                    </entry>

                    <!-- 运单状态-验货 -->
                    <entry key="${jmq.task.topic.waybill.status.inspection.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.inspection.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <!-- 运单状态-分拣 -->
                    <entry key="${jmq.task.topic.waybill.status.sorting.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.sorting.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-逆向验货 -->
                    <entry key="${jmq.task.topic.waybill.status.reverse.inspection.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.reverse.inspection.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-逆向分拣 -->
                    <entry key="${jmq.task.topic.waybill.status.reverse.sorting.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.reverse.sorting.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-分拣退货 -->
                    <entry key="${jmq.task.topic.waybill.status.sorting.return.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.sorting.return.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-三方验货 -->
                    <entry key="${jmq.task.topic.waybill.status.third.inspection.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.third.inspection.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-发货 -->
                    <entry key="${jmq.task.topic.waybill.status.delivery.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.delivery.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-售后备件库 -->
                    <entry key="${jmq.task.topic.waybill.status.aftersale.spare.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.aftersale.spare.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>


                    <!-- 运单状态-妥投 -->
                    <entry key="${jmq.task.topic.waybill.status.done.dms}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>

                    <entry key="${jmq.task.topic.waybill.status.done.pre}">
                        <bean class="com.jd.bluedragon.core.jmq.asynBuffer.PostStoredBeanProxyTaskProcessor" autowire="byType">
                            <constructor-arg name="target">
                                <bean class="com.jd.bluedragon.distribution.waybill.service.WaybillServiceImpl"/>
                            </constructor-arg>
                            <constructor-arg name="methodName" value="doWaybillStatusTask"></constructor-arg>
                        </bean>
                    </entry>
	    		</map>
	    	</constructor-arg>
	    </bean>
	    
	    
	    <bean id="dynamicJmqComsumer" class="com.jd.ql.framework.asynBuffer.comsumer.DynamicJmqComsumer" init-method="start">
	    	<property name="transportConfig">
	    		<bean class="com.jd.jmq.client.connection.TransportConfig">
	    			<property name="address" value="${dms.task.jmq.address}"></property>
	    			<property name="user" value="${dms.task.jmq.user}"></property>
	    			<property name="password" value="${dms.task.jmq.password}"></property>
	    			<property name="app" value="${dms.task.jmq.app}"></property>
	    		</bean>
	    	</property>
	    	<property name="router" ref="simpleTaskProcessorJMQRouter"/>
	    	<property name="coder">
	    		<bean class="com.jd.bluedragon.distribution.task.asynBuffer.jmq.TaskJmqMessageJsonCoder"></bean>
	    	</property>
	    	<property name="ownSign" value="${ownSign}"/>
	    </bean>
</beans>