<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">


    <!-- 备份数据源的配置信息 -->

    <!-- 备份数据源的抽象定义  -->
    <bean id="abstractBackupDataSource" class="org.apache.commons.dbcp.BasicDataSource" abstract="true">
        <property name="driverClassName" value="${db.backup.oralce.driverClassName}"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="initialSize" value="${db.backup.initialSize}"/>
        <property name="maxIdle" value="${db.backup.maxIdle}"/>
        <property name="minIdle" value="${db.backup.minIdle}"/>
        <property name="maxActive" value="${db.backup.maxActive}"/>
        <property name="maxWait" value="${db.backup.maxWait}"/>
        <property name="minEvictableIdleTimeMillis" value="${db.backup.minEvictableIdleTimeMillis}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${db.backup.timeBetweenEvictionRunsMillis}"/>
        <property name="poolPreparedStatements" value="false" />
    </bean>

    <!-- 备份写数据源的抽象定义  -->
    <bean id="backupWriteDataSource" parent="abstractBackupDataSource">
        <property name="url" value="${db.backup.oracle.db.url}"/>
        <property name="username" value="${db.backup.oracle.db.username}" />
        <property name="password" value="${db.backup.oracle.db.password}" />
    </bean>


    <!-- <bean id="backupWriteSequenceDataSource" class="com.jd.ql.framework.ddf.jdbc.sequence.SequenceDataSource">
        <constructor-arg index="0">
          <bean class="com.jd.ql.framework.idgenerator.support.DdfSequenceGenerator">
            <property name="jsfAlias" value="${sequenceService.alias}"/>
            <property name="jsfTimeout" value="${sequenceService.timeout}"/>
          </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="backupWriteDataSource"/>
      </bean> -->

    <!-- 数据库双写主数据源配置  王进思  开始 -->

    <!-- 备份写数据源的sqlSession -->
    <!--<bean id="backupWriteSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--<property name="dataSource" ref="backupWriteDataSource" />-->
    <!--<property name="configLocation" value="classpath:config/oracle/mybatis-config.xml" />-->
    <!--</bean>-->
    <!---->
    <!--&lt;!&ndash; 备份写数据源的sqlTemplate &ndash;&gt;-->
    <!--<bean id="backupWriteSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
    <!--<constructor-arg index="0" ref="backupWriteSqlSessionFactory" />-->
    <!--</bean>-->
    <!---->
    <!--<bean id="backupWriteDataSourceDbStatementProcessor" class="com.jd.ql.framework.migration.replication.support.AsyncMirrorDbStatementProcessor">-->
    <!--<constructor-arg index="0" ref="backupWriteSqlSessionTemplate"></constructor-arg>-->
    <!--<constructor-arg index="1" value="${backup.db.replication.aysn.threadNum}"></constructor-arg>-->
    <!--</bean>-->
    <!-- 数据库双写主数据源配置  王进思  结束 -->


    <!-- 数据库双写主数据源配置  赵玉开  开始 -->
    <bean id="sqlSessionFactorySlave" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="backupWriteDataSource"/>
        <property name="configLocation" value="classpath:config/oracle/mybatis-config.xml" />
    </bean>
    <!-- 配置从数据源的事务管理器 -->
    <bean name="transactionManagerSlave"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="backupWriteDataSource" />
        <property name="rollbackOnCommitFailure" value="true" />
    </bean>

    <!-- 数据库双写主数据源配置  赵玉开  结束 -->

</beans>