<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd" >

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:configured/*.properties</value>
                <value>classpath:configured/important.properties</value>
            </list>
        </property>
    </bean>

    <import resource="classpath:spring/distribution-core-dao.xml" />

    <bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource" abstract="true">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="initialSize" value="${db.initialSize}"/>
        <property name="maxIdle" value="${db.maxIdle}"/>
        <property name="minIdle" value="${db.minIdle}"/>
        <property name="maxActive" value="${db.maxActive}"/>
        <property name="maxWait" value="${db.maxWait}"/>
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>
        <property name="poolPreparedStatements" value="false" />
    </bean>

    <!-- 备份数据源的抽象定义  -->
    <bean id="abstractBackupDataSource" class="org.apache.commons.dbcp.BasicDataSource" abstract="true">
        <property name="driverClassName" value="${db.main.driverClassName}"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="initialSize" value="${db.main.initialSize}"/>
        <property name="maxIdle" value="${db.main.maxIdle}"/>
        <property name="minIdle" value="${db.main.minIdle}"/>
        <property name="maxActive" value="${db.main.maxActive}"/>
        <property name="maxWait" value="${db.main.maxWait}"/>
        <property name="minEvictableIdleTimeMillis" value="${db.main.minEvictableIdleTimeMillis}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${db.main.timeBetweenEvictionRunsMillis}"/>
        <property name="poolPreparedStatements" value="false" />
    </bean>

    <!-- 备份写数据源的抽象定义  -->
    <bean id="backupWriteDataSource" parent="abstractBackupDataSource">
        <property name="url" value="${db.main.db.url}"/>
        <property name="username" value="${db.main.db.username}" />
        <property name="password" value="${db.main.db.password}" />
    </bean>

    <bean id="backupWriteSequenceDataSource" class="com.jd.ql.framework.ddf.jdbc.sequence.SequenceDataSource">
        <constructor-arg index="0">
            <bean class="com.jd.ql.framework.idgenerator.support.DdfSequenceGenerator">
                <property name="jsfAlias" value="${sequenceService.alias}"/>
                <property name="jsfTimeout" value="${sequenceService.timeout}"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="backupWriteDataSource"/>
    </bean>

    <!-- 备份写数据源的sqlSession -->
    <bean id="backupWriteSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="backupWriteSequenceDataSource" />
        <property name="configLocation" value="classpath:config/oracle/mybatis-config.xml" />
    </bean>

    <bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="backupWriteSqlSessionFactory" />
    </bean>

    <bean id="dmsReadDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${db.main.driverClassName}"/>
        <property name="url" value="${db.main.db.url}"/>
        <property name="username" value="${db.main.db.username}"/>
        <property name="password" value="${db.main.db.password}"/>
        <property name="defaultAutoCommit" value="${dms.read.db.defaultAutoCommit}" />
        <property name="maxActive" value="${dms.read.db.maxActive}" />
        <property name="maxIdle" value="${dms.read.db.maxIdle}" />
        <property name="maxWait" value="${dms.read.db.maxWait}" />
        <property name="initialSize" value="${dms.read.db.initialSize}" />
        <property name="minIdle" value="${dms.read.db.minIdle}" />
        <property name="minEvictableIdleTimeMillis" value="${dms.read.db.minEvictableIdleTimeMillis}" />
        <property name="timeBetweenEvictionRunsMillis" value="${dms.read.db.timeBetweenEvictionRunsMillis}" />
    </bean>

    <!-- dms读库 数据源  -start-->
    <bean id="mainReadSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dmsReadDataSource" />
        <property name="configLocation" value="classpath:config/oracle/mybatis-config-read.xml" />
    </bean>

    <bean id="readSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="mainReadSqlSessionFactory" />
    </bean>

    <bean id="taskDataSource" parent="parentDataSource">
        <property name="url" value="${dms.task.db.url}"/>
        <property name="username" value="${dms.task.db.username}" />
        <property name="password" value="${dms.task.db.password}" />
        <property name="initialSize" value="${dms.task.db.initialSize}"/>
        <property name="minIdle" value="${dms.task.db.minIdle}"/>
        <property name="maxIdle" value="${dms.task.db.maxIdle}"/>
        <property name="maxActive" value="${dms.task.db.maxActive}"/>
    </bean>

    <!-- worker配置 数据源    -start-->
    <bean id="workerSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="taskDataSource" />
        <property name="configLocation" value="classpath:config/oracle/mybatis-config-worker.xml" />
    </bean>

    <bean id="workerSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="workerSessionFactory" />
    </bean>


</beans>