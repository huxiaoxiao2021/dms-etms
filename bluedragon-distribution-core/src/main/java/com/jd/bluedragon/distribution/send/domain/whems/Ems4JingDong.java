
/*
 * 
 */

package com.jd.bluedragon.distribution.send.domain.whems;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1
 * Wed Aug 14 14:05:46 CST 2013
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "ems4JingDong", 
                  wsdlLocation = "http://59.175.182.126/wh_ems/services/ems4JingDong?wsdl",
                  targetNamespace = "http://jingdong.ws.whpost.cn") 
public class Ems4JingDong extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://jingdong.ws.whpost.cn", "ems4JingDong");
    public final static QName Ems4JingDongHttpSoap11Endpoint = new QName("http://jingdong.ws.whpost.cn", "ems4JingDongHttpSoap11Endpoint");
    public final static QName Ems4JingDongHttpEndpoint = new QName("http://jingdong.ws.whpost.cn", "ems4JingDongHttpEndpoint");
    public final static QName Ems4JingDongHttpSoap12Endpoint = new QName("http://jingdong.ws.whpost.cn", "ems4JingDongHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://59.175.182.126/wh_ems/services/ems4JingDong?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://59.175.182.126/wh_ems/services/ems4JingDong?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public Ems4JingDong(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Ems4JingDong(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Ems4JingDong() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     * 
     * @return
     *     returns Ems4JingDongPortType
     */
    @WebEndpoint(name = "ems4JingDongHttpSoap11Endpoint")
    public Ems4JingDongPortType getEms4JingDongHttpSoap11Endpoint() {
        return super.getPort(Ems4JingDongHttpSoap11Endpoint, Ems4JingDongPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Ems4JingDongPortType
     */
    @WebEndpoint(name = "ems4JingDongHttpSoap11Endpoint")
    public Ems4JingDongPortType getEms4JingDongHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(Ems4JingDongHttpSoap11Endpoint, Ems4JingDongPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns Ems4JingDongPortType
     */
    @WebEndpoint(name = "ems4JingDongHttpEndpoint")
    public Ems4JingDongPortType getEms4JingDongHttpEndpoint() {
        return super.getPort(Ems4JingDongHttpEndpoint, Ems4JingDongPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Ems4JingDongPortType
     */
    @WebEndpoint(name = "ems4JingDongHttpEndpoint")
    public Ems4JingDongPortType getEms4JingDongHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(Ems4JingDongHttpEndpoint, Ems4JingDongPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns Ems4JingDongPortType
     */
    @WebEndpoint(name = "ems4JingDongHttpSoap12Endpoint")
    public Ems4JingDongPortType getEms4JingDongHttpSoap12Endpoint() {
        return super.getPort(Ems4JingDongHttpSoap12Endpoint, Ems4JingDongPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Ems4JingDongPortType
     */
    @WebEndpoint(name = "ems4JingDongHttpSoap12Endpoint")
    public Ems4JingDongPortType getEms4JingDongHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(Ems4JingDongHttpSoap12Endpoint, Ems4JingDongPortType.class, features);
    }

}
