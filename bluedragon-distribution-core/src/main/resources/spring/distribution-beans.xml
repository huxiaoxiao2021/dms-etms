<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd">

    <bean name="sortingNumberLimitConfig" class="com.jd.bluedragon.distribution.ver.config.SortingNumberLimitConfig" >
		<property name="siteTypes">
			<map>
				<entry key="4">
					<set>
						<value>4</value>
					</set>
				</entry>
				<entry key="64">
					<set>
						<value>256</value>
						<value>64</value>
						<value>6408</value>
						<value>6409</value>
						<value>6410</value>
					</set>
				</entry>
			</map>
    	</property>
    </bean>

    <!--  固定箱号前缀的系统  -->
    <!--  @see com.jd.bluedragon.distribution.box.domain.BoxSystemTypeEnum   -->
    <bean id="stableBoxPrefixSystem"  class="java.util.HashSet">
        <constructor-arg type="java.util.Collection">
            <set>
                <!-- 京喜快递 -->
                <value type="java.lang.String">03</value>
            </set>
        </constructor-arg>
    </bean>

    <!--  固定箱号前缀的类型  -->
    <!--  @see com.jd.bluedragon.distribution.box.constants.BoxTypeEnum  -->
    <bean id="stableBoxPrefixType"  class="java.util.HashSet">
        <constructor-arg type="java.util.Collection">
            <set>
                <value type="java.lang.String">ZH</value>
                <value type="java.lang.String">ZF</value>
                <value type="java.lang.String">ZK</value>
                <value type="java.lang.String">ZQ</value>
                <value type="java.lang.String">ZS</value>
            </set>
        </constructor-arg>
    </bean>
    <!-- 旧异常扫描-校验改地址原因ids -->
    <bean id="checkPrintInterceptReasonIdSetForOld"  class="java.util.HashSet">
    	<constructor-arg type="java.util.Collection">
        	<set value-type="java.lang.Integer">    
				<!-- 20260-锁定订单退回 -->
				<value>20260</value>
				<!-- 20261-退款100分订单退回 -->
				<value>20261</value>	
				<!-- 20262-客户取消订单 -->
				<value>20262</value>	
				<!-- 20263-包装损坏无法发货 -->
				<value>20263</value>
				<!-- 20264-订单地址超区 -->
				<value>20264</value>	
			</set>		
        </constructor-arg>
    </bean>
	<!-- 新异常上报-校验改地址原因ids -->
    <bean id="checkPrintInterceptReasonIdSet"  class="java.util.HashSet">
    	<constructor-arg type="java.util.Collection">
        	<set value-type="java.lang.Long">
				<!-- 45186-客户取消订单 -->
				<value>45186</value>
			</set>
        </constructor-arg>
    </bean>
    <!-- 获取包裹明细线程池配置，参考了jsf线程池配置，由于上层请求流量限制来自jsf，要考虑线程池不能成为瓶颈 -->
    <bean id="executorparallelGetPackageExecutor" class="com.jd.bluedragon.utils.ThreadPoolExecutorFactory">
        <property name="corePoolSize" value="${parallel.getpackage.Executor.corePoolSize:20}"/><!-- jsf:server配置: 初始线程数 20，所有接口共用，达到200请求就报错 -->
        <property name="maxPoolSize" value="${parallel.getpackage.Executor.maxPoolSize:50}"/><!-- jsf:server配置: 默认线程池 200，但是是给所有的接口公用 -->
        <property name="keepAliveSeconds" value="${parallel.getpackage.Executor.keepAliveSeconds:60}"/>
        <property name="queueCapacity" value="${parallel.getpackage.Executor.queueCapacity:2000}"/><!-- jsf:server配置: 最大线程池200，最坏情况 一个请求分10页。队列需要200*20 -->
        <property name="threadName" value="${parallel.getpackage.Executor.threadName:getPackageThread}"/>
    </bean>
    <!-- 并发任务处理线程池配置 -->
    <bean id="concurrentJobHandlerExecutor" class="com.jd.bluedragon.utils.ThreadPoolExecutorFactory">
        <property name="corePoolSize" value="${beans.concurrentJobHandlerExecutor.corePoolSize:10}"/><!-- jsf:server配置: 初始线程数 20，所有接口共用，达到200请求就报错 -->
        <property name="maxPoolSize" value="${beans.concurrentJobHandlerExecutor.maxPoolSize:100}"/><!-- jsf:server配置: 默认线程池 200，但是是给所有的接口公用 -->
        <property name="keepAliveSeconds" value="${beans.concurrentJobHandlerExecutor.keepAliveSeconds:60}"/>
        <property name="queueCapacity" value="${beans.concurrentJobHandlerExecutor.queueCapacity:2000}"/><!-- jsf:server配置: 最大线程池200，最坏情况 一个请求分10页。队列需要200*20 -->
        <property name="threadName" value="${beans.concurrentJobHandlerExecutor.threadName:concurrentJobHandlerThread}"/>
    </bean>    
	<bean id="parentConcurrentJobHandler" class="com.jd.bluedragon.dms.job.ConcurrentJobHandler" abstract="true">
		<constructor-arg index="0" ref="concurrentJobHandlerExecutor"></constructor-arg>
	</bean>
	<bean id="checkCanAirToRoadJobHandler" class="com.jd.bluedragon.distribution.arAbnormal.CheckCanAirToRoadJobHandler" parent="parentConcurrentJobHandler">
	</bean>
    <!-- 运单全程跟踪状态映射map
       邮政操作码   操作码说明   京东三方路由  京东三方路由说明    京东全程跟踪运单状态码说明   京东全程跟踪运单状态码
		50  邮政接收    GOT 揽收  派送交接    -1630
		53  到达邮政处理中心    ARRIVAL_C   中转到（中转场/分拣中心）   分拣中心验货  10
		52  离开邮政处理中心    DEPARTURE_C 中转发（中转场/分拣中心）   分拣中心发货  16
		60  到达邮政投递网点    ARRIVAL_S   入站（站点）  站点验货    80
		70  派件  SENT_SCAN   派件  配送员收货   110
		80  妥投  SIGNED  妥投（客户签收）    妥投  150
		90  未妥投 ABNORMAL_DELIVERY   配送异常    配送异常    -320
		81  收件人已取走  SELF_SIGNED 签收  签收  -970
		51  邮政退回    BACK_C  接货中心退货至分拣中心状态   接货中心退货至分拣中心状态   8
    -->
    <bean id="stateCodeToEmsMap" class="java.util.HashMap">
        <constructor-arg>
           <map key-type="java.lang.String" value-type="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
			<entry key="-1630"  value-ref="emsTraces50"/>
			<entry key="10"     value-ref="emsTraces53"/>
			<entry key="16"     value-ref="emsTraces52"/>
			<entry key="80"     value-ref="emsTraces60"/>
			<entry key="110"    value-ref="emsTraces70"/>
			<entry key="150"    value-ref="emsTraces80"/>
			<entry key="-320"   value-ref="emsTraces90"/>
			<entry key="-970"   value-ref="emsTraces81"/>
			<entry key="8"      value-ref="emsTraces51"/>				
           </map>
        </constructor-arg>
    </bean>
    <bean id="emsTraces50" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "50"/>
        <property name="name" value = "邮政接收"/>
    </bean>
    <bean id="emsTraces53" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "53"/>
        <property name="name" value = "到达邮政处理中心"/>
    </bean>
    <bean id="emsTraces52" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "52"/>
        <property name="name" value = "离开邮政处理中心"/>
    </bean>
    <bean id="emsTraces60" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "60"/>
        <property name="name" value = "到达邮政投递网点"/>
    </bean>
    <bean id="emsTraces70" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "70"/>
        <property name="name" value = "派件"/>
    </bean>
    <bean id="emsTraces80" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "80"/>
        <property name="name" value = "妥投"/>
    </bean>
    <bean id="emsTraces90" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "90"/>
        <property name="name" value = "未妥投"/>
    </bean>
    <bean id="emsTraces81" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "81"/>
        <property name="name" value = "收件人已取走"/>
    </bean>
    <bean id="emsTraces51" class="com.jd.bluedragon.external.crossbow.postal.domain.TracesOperType">
        <property name="code" value = "51"/>
        <property name="name" value = "邮政退回"/>
    </bean>               
</beans>
