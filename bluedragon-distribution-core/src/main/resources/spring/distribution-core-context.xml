<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd

    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

 	<aop:aspectj-autoproxy/>

	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>

	<import resource="classpath:spring/distribution-core-datasource-jddl-${profiles.env}.xml" />
	<import resource="classpath:spring/distribution-core-datasource-task-config.xml" />
	<import resource="classpath:spring/distribution-core-datasource-undiv.xml" />
	<import resource="classpath:spring/distribution-core-datasource-jy-core.xml" />
	<import resource="classpath:spring/distribution-core-datasource-wb-core.xml" />
	<import resource="classpath:spring/distribution-core-datasource-aggs.xml" />
	<import resource="classpath:spring/distribution-core-datasource-jy-core-agg-bak.xml" />
	<import resource="classpath:spring/distribution-core-datasource-jy-core-agg-main.xml" />
	<import resource="classpath:spring/distribution-core-datasource-loadunload.xml"/>
	<import resource="classpath:spring/distribution-core-datasource-task.xml" />
	<import resource="classpath:spring/distribution-core-dao.xml" />
	<import resource="classpath:spring/distribution-core-agg-dao-bak.xml" />
	<import resource="classpath:spring/distribution-core-agg-dao-main.xml" />
	<import resource="classpath:spring/distribution-core-ws.xml" />
	<import resource="classpath:spring/distribution-core-business.xml" />
<!-- 	<import resource="classpath:spring/distribution-core-wss.xml" /> -->
	<import resource="classpath:spring/order_service_config.xml" />
	<import resource="classpath:spring/distribution-core-redis.xml" />
	<import resource="classpath:spring/distribution-core-jsf-consumer.xml" />
    <import resource="classpath:spring/distribution-core-cassandra.xml" />
    <import resource="classpath:spring/distribution-core-manual-bean.xml"/>
	<import resource="classpath:spring/distribution-core-crossbow-manager.xml" />
	<import resource="classpath:spring/distribution-core-log.xml" />
	<import resource="classpath:spring/distribution-core-cache.xml" />
	<import resource="classpath:spring/distribution-core-jdq.xml" />

    <!--<import resource="classpath:spring/distribution-core-asynBuffer-producer.xml"/>-->

	<import resource="classpath:spring/distribution-core-jss.xml"/>
	<import resource="classpath:spring/spring-oss.xml"/>

	<import resource="classpath:spring/spring-ucc.xml" />
	<import resource="classpath:spring/distribution-core-sms.xml" />
	<import resource="classpath:spring/distribution-core-handler.xml" />
	<import resource="classpath:spring/distribution-core-sequence-gen.xml" />
	<import resource="distribution-beans.xml" />
	<import resource="distribution-core-datasource-waybill.xml" />
	<import resource="classpath:spring/distribution-core-aces.xml" />
	<import resource="classpath:spring/distribution-web-sorting-filter.xml" />
	<import resource="classpath:spring/hystrix-config.xml" />

	<context:component-scan base-package="com.jd.bluedragon.distribution.popAbnormal.helper" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.*.dao" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.product.service" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.*.ws" />
    <context:component-scan base-package="com.jd.bluedragon" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.product.service" />
	<context:component-scan base-package="com.jd.bluedragon.core.message.producer" />
	<context:component-scan base-package="com.jd.bluedragon.core.message.consumer.*" />
	<context:component-scan base-package="com.jd.bluedragon.core.redis" />
	<context:component-scan base-package="com.jd.bluedragon.core.base" />
<!--	<context:component-scan base-package="com.jd.lsb" />-->

	<bean id="springHelper" class="com.jd.bluedragon.utils.SpringHelper"></bean>
	<bean id="cacheAspect" class="com.jd.etms.framework.utils.cache.spring.CacheAspect">
		<property name="cluster" ref="redisClientCache"></property>
		<property name="keyGenerator" ref="keyGenerator"></property>
	</bean>
	<bean id="cacheMonitor" class="com.jd.etms.framework.utils.cache.monitor.DefaultCacheMonitor"></bean>
	<bean id="cacheKeyGeneratorScaner" class="com.jd.bluedragon.utils.CacheKeyGeneratorScaner">
		<property name="keyGenerator" ref="keyGenerator"></property>
	</bean>
	<bean id="keyGenerator" class="com.jd.bluedragon.utils.DmsArgsMatchCacheKeyGenerator"></bean>
    <!--以下两条注入是正向与逆向发货一单多件不全验证-->
    <bean id="forwardComputer" class="com.jd.bluedragon.distribution.send.service.DeliveryServiceImpl$ForwardSendDiffrence"></bean>
    <bean id="reverseComputer" class="com.jd.bluedragon.distribution.send.service.DeliveryServiceImpl$ReverseSendDiffrence"></bean>

    <bean class="com.jd.coo.sa.mybatis.plugins.id.SequenceGenAdaptor" id="sequenceGenAdaptor">
        <constructor-arg index="0">
            <bean class="com.jd.coo.sa.sequence.snowflake.impl.PropertiesFileSnowflakeSequenceGen">
               <constructor-arg index="0" value="/configured/snowflake.properties"/>
            </bean>
        </constructor-arg>
    </bean>

</beans>
