<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

 	<aop:aspectj-autoproxy/>
 
	<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>
	
	<import resource="classpath:spring/distribution-core-common.xml" />
	<import resource="classpath:spring/distribution-core-common-mysql.xml" />
	<import resource="classpath:spring/distribution-core-dao.xml" />
	<import resource="classpath:spring/distribution-core-ws.xml" />
	<import resource="classpath:spring/distribution-core-wss.xml" />
	<import resource="classpath:spring/order_service_config.xml" />
	<import resource="classpath:spring/distribution-core-redis.xml" />
	<import resource="classpath:spring/distribution-core-jsf.xml" />
	<import resource="classpath:spring/distribution-core-cassandra.xml" />
    <import resource="classpath:spring/distribution-core-jmq.xml" />
    <import resource="classpath:spring/distribution-core-manual-bean.xml"/>

	<context:component-scan base-package="com.jd.bluedragon.distribution.popAbnormal.helper" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.*.dao" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.product.service" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.*.ws" />
    <context:component-scan base-package="com.jd.bluedragon" />
	<context:component-scan base-package="com.jd.bluedragon.distribution.product.service" />
	<context:component-scan base-package="com.jd.bluedragon.core.message.producer" />
	<context:component-scan base-package="com.jd.bluedragon.core.message.consumer.*" />
	<context:component-scan base-package="com.jd.bluedragon.core.redis" />
	<context:component-scan base-package="com.jd.bluedragon.core.base" />

	<bean id="springHelper" class="com.jd.bluedragon.utils.SpringHelper"></bean>
	<bean id="cacheAspect" class="com.jd.etms.utils.cache.spring.CacheAspect">
		<property name="shardedXCommands" ref="redisClientCache"></property>
		<property name="keyGenerator" ref="keyGenerator"></property>
	</bean>
	<bean id="cacheMonitor" class="com.jd.etms.utils.cache.monitor.DefaultCacheMonitor"></bean>
	<bean id="cacheKeyGeneratorScaner" class="com.jd.bluedragon.utils.CacheKeyGeneratorScaner">
		<property name="keyGenerator" ref="keyGenerator"></property>
	</bean>
	<bean id="keyGenerator" class="com.jd.bluedragon.utils.DmsArgsMatchCacheKeyGenerator"></bean>
    <!--以下两条注入是正向与逆向发货一单多件不全验证-->
    <bean id="forwardComputer" class="com.jd.bluedragon.distribution.send.service.DeliveryServiceImpl$ForwardSendDiffrence"></bean>
    <bean id="reverseComputer" class="com.jd.bluedragon.distribution.send.service.DeliveryServiceImpl$ReverseSendDiffrence"></bean>
</beans>