<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:configured/*.properties</value>
				<value>classpath:configured/important.properties</value>
			</list>
		</property>
	</bean>
	
	<import resource="classpath:spring/oracle/distribution-core-datasource-backup.xml"/>
	
	<bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource" abstract="true">
	    <property name="driverClassName" value="${db.driverClassName}"/>
		<property name="defaultAutoCommit" value="true"/>
		<property name="initialSize" value="${db.initialSize}"/>
		<property name="maxIdle" value="${db.maxIdle}"/>
		<property name="minIdle" value="${db.minIdle}"/>
		<property name="maxActive" value="${db.maxActive}"/>
		<property name="maxWait" value="${db.maxWait}"/>
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>
		<property name="poolPreparedStatements" value="false" />
	</bean>
	
	 <bean id="taskDataSource" parent="parentDataSource">
	    <property name="url" value="${dms.task.db.url}"/>
	    <property name="username" value="${dms.task.db.username}" />
		<property name="password" value="${dms.task.db.password}" />
		<property name="initialSize" value="${dms.task.db.initialSize}"/>
		<property name="minIdle" value="${dms.task.db.minIdle}"/>
		<property name="maxIdle" value="${dms.task.db.maxIdle}"/>
		<property name="maxActive" value="${dms.task.db.maxActive}"/>
	</bean>
	
	<bean id="centerDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${wss.dataSource.driverClassName}"/>
		<property name="url" value="${wss.dataSource.new.url}"/>
		<property name="username" value="${wss.dataSource.username}"/>
		<property name="password" value="${wss.dataSource.password}"/>
		<property name="defaultAutoCommit" value="${wss.dataSource.defaultAutoCommit}" />
		<property name="maxActive" value="${wss.dataSource.maxActive}" />
		<property name="maxIdle" value="${wss.dataSource.maxIdle}" />
		<property name="maxWait" value="${wss.dataSource.maxWait}" />
		<property name="initialSize" value="${wss.dataSource.initialSize}" />
		<property name="minIdle" value="${wss.dataSource.minIdle}" />
		<property name="minEvictableIdleTimeMillis" value="${wss.dataSource.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${wss.dataSource.timeBetweenEvictionRunsMillis}" />
	</bean>	
	
	<bean id="dms_main" parent="parentDataSource">
	    <property name="url" value="${db.url}"/>
	    <property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="dmsReadDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dms.read.db.driverClassName}"/>
		<property name="url" value="${dms.read.db.new.url}"/>
		<property name="username" value="${dms.read.db.username}"/>
		<property name="password" value="${dms.read.db.password}"/>
		<property name="defaultAutoCommit" value="${dms.read.db.defaultAutoCommit}" />
		<property name="maxActive" value="${dms.read.db.maxActive}" />
		<property name="maxIdle" value="${dms.read.db.maxIdle}" />
		<property name="maxWait" value="${dms.read.db.maxWait}" />
		<property name="initialSize" value="${dms.read.db.initialSize}" />
		<property name="minIdle" value="${dms.read.db.minIdle}" />
		<property name="minEvictableIdleTimeMillis" value="${dms.read.db.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dms.read.db.timeBetweenEvictionRunsMillis}" />
	</bean>

	<bean id="dataSources" class="com.jd.dbs.datasources.DefaultDataSourceService">
		<property name="defaultIdentity" value="dms"></property>
		<property name="dataSourceDescriptors">
			<set>
				<bean class="com.jd.dbs.datasources.DataSourceDescriptor">
					<property name="identity" value="dms"/>
					<!-- <property name="mainDataSource" ref="dmsMainSequenceDataSource"/> -->
					<property name="mainDataSource" ref="dms_main"/>
					<property name="threadPoolSize"  value="10"/>
				</bean>
			</set>
		</property>	
	</bean>
	
	<bean id="transactionAlert" class="com.jd.bluedragon.common.utils.DbTransactionAlert" />
	
	<bean id="transactionManager"
		class="com.jd.dbs.transaction.MultiDataSourcesTransactionManager">
		<property name="dataSourceService" ref="dataSources" />
		<property name="transactionAlert" ref="transactionAlert" />
		<property name="transactionTrigger" ref="mesageClient" />
		<qualifier value="main"></qualifier>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<bean id="mainWriteSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dms_main" />
		<property name="configLocation" value="classpath:config/oracle/mybatis-config.xml" />
	</bean>
	
	<bean id="mainWriteReplicationSqlSessionFactory" class="com.jd.ql.framework.migration.replication.transaction.ReplicationSqlSessionFactory">
		<constructor-arg index="0" ref="mainWriteSessionFactory"/>
		<property name="enable" value="true" />
		<property name="statementDecider">
			<bean class="com.jd.bluedragon.common.dao.migration.DmsBackupDataSourceStatementDecider" />
		</property>
		<property name="statementProcessor" ref="backupWriteDataSourceDbStatementProcessor" />
		<property name="ignoreExceptionWhenReplication" value="true" />
	</bean>
	
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="mainWriteReplicationSqlSessionFactory" />
	</bean>
	
	<!-- dms读库 数据源  -start-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dmsReadDataSource" />
		<property name="configLocation" value="classpath:config/oracle/mybatis-config-read.xml" />
	</bean>
	
	
	<bean id="readSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- dms读库 数据源  -end-->

    <!-- worker配置数据源    -start-->
    
    <bean id="workerSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- <property name="dataSource" ref="mysqlTaskDataSource" />
        <property name="configLocation" value="classpath:config/mysql/mybatis-config-worker.xml" /> -->
        <property name="dataSource" ref="taskDataSource" />
       <property name="configLocation" value="classpath:config/oracle/mybatis-config-worker.xml" />
    </bean>

    <bean id="workerSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="workerSessionFactory" />
    </bean>
    <!-- worker配置 数据源    -end-->

	<bean class="com.jd.bluedragon.core.objectid.DbsGenerateObjectId" id="genObjectId">
		<!-- <property name="dataSource" ref="dmsMainSequenceDataSource"/> -->
		<property name="dataSource" ref="dms_main"/>
    </bean>
    
    <bean id="cacheUtils" class="com.jd.common.cached.CacheUtils">
		<property name="cacheServerAddress">
			<list>
				<value>${base.memcached.address}</value>
			</list>
		</property>
	</bean>
	
	<bean id="baseSetConfig" class="com.jd.bluedragon.distribution.base.domain.BaseSetConfig">
		<property name="erroral">
			<list>
				<value>110</value>
				<value>120</value>
				<value>130</value>
				<value>140</value>
			</list>
		</property>
		<property name="sitetype" value="18" />
		<property name="capacityType">
			<list>
				<value>7030</value>
				<value>7031</value>
				<value>7032</value>
			</list>
		</property>
	</bean>
	
	<util:properties id="mqsenderProperties" location="classpath:configured/mqsender.properties"></util:properties>
	
	<bean id="mesageClient" class="com.jd.etms.message.produce.client.factory.SingleClientFactory">
		<property name="appName" value="dms-distribution"/>
		<property name="properties" ref="mqsenderProperties" />
		<property name="dataSource" ref="centerDataSource"/>
		<property name="sqlSession" ref="sessionTemplate"/>
	</bean>

	<!-- ump monitor begin common-->
	<!-- aop动态代理 --> 
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!--  监控注解处理器 已放到具体的应用中web\worker contex.xml中进行区分 -->
	<!--bean class="com.jd.ump.annotation.JAnnotation">
	   <property name="jvmKey" value="Bluedragon_dms_center.jvm.common"></property>
	   <property name="systemKey" value="Bluedragon_dms_center.system.common"></property>
	</bean-->
	<!-- ump monitor end common-->

    <bean id="requestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="readTimeout" value="${rest.readtimeout}"/>
        <property name="connectTimeout" value="${rest.connecttimeout}"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="requestFactory"/>
    </bean>
</beans>