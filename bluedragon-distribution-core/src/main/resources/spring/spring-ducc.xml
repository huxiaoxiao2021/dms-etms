<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:laf-config="http://ducc.jd.com/schema/laf-config"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd 
	    http://ducc.jd.com/schema/laf-config
	    http://ducc.jd.com/schema/laf-config/laf-config.xsd
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context.xsd">
	    
    <context:component-scan base-package="com.jd.bluedragon.configuration.ducc"/>
    <context:annotation-config/>

    <bean name = "duccPropertyConfig" class="com.jd.bluedragon.configuration.ducc.DuccPropertyConfig">
        
    </bean>
    <laf-config:manager id="configuratorManager" application="${ducc.appName}">
        <laf-config:parameter key="autoListener" value="true"/>
        <!--
        可以有多个 resource； 每个 resource 通常对应一个 ducc profile；
        name 表示资源名称，ducc 要求 这个 name 进程内唯一；
        uri 是配置定位，可以在 ducc 管理端-配置页面上，点击按钮生成这个 uri 的模板，然后把 appName 和 token 修改成实际值即可；
        -->
        <laf-config:resource name="${ducc.resource1.name}" uri="${ducc.resource1.uri}" />
        
        <!-- ducc管理端设置,key是：logger.level value是：ROOT=DEBUG ,配置后进行发布
        <laf-config:listener-script key="logger.level" script="script/log4j2.js"/>-->
    </laf-config:manager>    
</beans>