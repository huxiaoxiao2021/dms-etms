<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jd.dms.wb.mapper.single.offlinepassword.IConfigOfflinePasswordMapper">
  <resultMap id="BaseResultMap" type="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_site_code" jdbcType="INTEGER" property="createSiteCode" />
    <result column="create_operator_erp" jdbcType="VARCHAR" property="createOperatorErp" />
    <result column="update_operator_erp" jdbcType="VARCHAR" property="updateOperatorErp" />
    <result column="incomplete_create_time" jdbcType="TIMESTAMP" property="incompleteCreateTime" />
    <result column="login_create_time" jdbcType="TIMESTAMP" property="loginCreateTime" />
    <result column="incomplete_password_email" jdbcType="VARCHAR" property="incompletePasswordEmail" />
    <result column="login_password_email" jdbcType="VARCHAR" property="loginPasswordEmail" />
    <result column="prime" jdbcType="INTEGER" property="prime" />
    <result column="yn" jdbcType="TINYINT" property="yn" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_site_code, create_operator_erp, update_operator_erp, incomplete_create_time, login_create_time,
    incomplete_password_email,login_password_email,prime, yn, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config_offline_password
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from config_offline_password
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword" useGeneratedKeys="true">
    insert into config_offline_password (create_site_code, create_operator_erp, 
      update_operator_erp, incomplete_create_time, login_create_time,
      incomplete_password_email,login_password_email,prime, yn,
      remark)
    values (#{createSiteCode,jdbcType=INTEGER}, #{createOperatorErp,jdbcType=VARCHAR}, 
      #{updateOperatorErp,jdbcType=VARCHAR}, #{incompleteCreateTime,jdbcType=TIMESTAMP}, #{loginCreateTime,jdbcType=TIMESTAMP},
      #{incompletePasswordEmail,jdbcType=VARCHAR},
      #{loginPasswordEmail,jdbcType=VARCHAR},
            #{prime,jdbcType=TINYINT},
            #{yn,jdbcType=TINYINT},
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword" useGeneratedKeys="true">
    insert into config_offline_password
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createSiteCode != null">
        create_site_code,
      </if>
      <if test="createOperatorErp != null">
        create_operator_erp,
      </if>
      <if test="updateOperatorErp != null">
        update_operator_erp,
      </if>
      <if test="incompleteCreateTime != null">
        incomplete_create_time,
      </if>
      <if test="loginCreateTime != null">
        login_create_time,
      </if>
      <if test="incompletePasswordEmail != null">
        incomplete_password_email,
      </if>
      <if test="loginPasswordEmail != null">
          login_password_email,
      </if>
      <if test="prime != null">
        prime,
      </if>
      <if test="yn != null">
        yn,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createSiteCode != null">
        #{createSiteCode,jdbcType=INTEGER},
      </if>
      <if test="createOperatorErp != null">
        #{createOperatorErp,jdbcType=VARCHAR},
      </if>
      <if test="updateOperatorErp != null">
        #{updateOperatorErp,jdbcType=VARCHAR},
      </if>
      <if test="incompleteCreateTime != null">
        #{incompleteCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCreateTime != null">
        #{loginCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="incompletePasswordEmail != null">
        #{incompletePasswordEmail},
      </if>
        <if test="loginPasswordEmail != null">
        #{loginPasswordEmail},
      </if>
      <if test="prime != null">
        #{prime,jdbcType=TINYINT},
      </if>
        <if test="yn != null">
        #{yn,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByCreateSiteCodeSelective" parameterType="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword">
    update config_offline_password
    <set>
      <if test="createOperatorErp != null">
        create_operator_erp = #{createOperatorErp,jdbcType=VARCHAR},
      </if>
      <if test="updateOperatorErp != null">
        update_operator_erp = #{updateOperatorErp,jdbcType=VARCHAR},
      </if>
      <if test="incompleteCreateTime != null">
        incomplete_create_time = #{incompleteCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCreateTime != null">
        login_create_time = #{loginCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="incompletePasswordEmail != null">
        incomplete_password_email = #{incompletePasswordEmail,jdbcType=VARCHAR},
      </if>
      <if test="loginPasswordEmail != null">
        login_password_email = #{loginPasswordEmail,jdbcType=VARCHAR},
      </if>
      <if test="prime != null">
        prime = #{prime,jdbcType=TINYINT},
      </if>
        <if test="yn != null">
        yn = #{yn,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where create_site_code = #{createSiteCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword">
    update config_offline_password
    set create_site_code = #{createSiteCode,jdbcType=INTEGER},
      create_operator_erp = #{createOperatorErp,jdbcType=VARCHAR},
      update_operator_erp = #{updateOperatorErp,jdbcType=VARCHAR},
      incomplete_create_time = #{incompleteCreateTime,jdbcType=TIMESTAMP},
      login_create_time = #{loginCreateTime,jdbcType=TIMESTAMP},
      incomplete_password_email = #{incompletePasswordEmail,jdbcType=VARCHAR},
      login_password_email = #{loginPasswordEmail,jdbcType=VARCHAR},
      prime = #{prime,jdbcType=TINYINT},
      yn = #{yn,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByCreateSiteCodes" parameterType="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from config_offline_password
    where yn=1
    and create_site_code in
    <foreach collection="siteCodes" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <update id="updatePrime" parameterType="com.jd.dms.wb.sdk.model.offlinepassword.ConfigOfflinePassword">
     update config_offline_password
     set prime = #{prime,jdbcType=TINYINT},
         incomplete_create_time = now(),
         login_create_time = now()
     where create_site_code = #{createSiteCode,jdbcType=INTEGER}
  </update>

</mapper>