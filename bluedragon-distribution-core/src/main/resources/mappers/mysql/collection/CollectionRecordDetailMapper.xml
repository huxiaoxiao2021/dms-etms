<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.bluedragon.distribution.collection.dao.CollectionRecordDetailDao" >

	<resultMap id="collectionRecordDetailMap"
			   type="com.jd.bluedragon.distribution.collection.entity.CollectionRecordDetailPo" >
		<result column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
		<result column="collection_code" property="collectionCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result column="scan_code" property="scanCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result column="scan_code_type" property="scanCodeType" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result column="agg_code" property="aggCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result column="agg_code_type" property="aggCodeType" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result column="collected_status" property="collectedStatus" javaType="java.lang.Integer" jdbcType="INTEGER"/>
		<result column="collected_mark" property="collectedMark" javaType="java.lang.String" jdbcType="VARCHAR"/>
		<result column="create_time" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
		<result column="collected_time" property="collectedTime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
		<result column="yn" property="yn" javaType="java.lang.Integer" jdbcType="TINYINT"/>
		<result column="ts" property="ts" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
	</resultMap>

	<insert id="batchInsertCollectionRecordDetail" parameterType="java.util.List">
		INSERT INTO collection_record_detail
		(
			`id`, `collection_code`, `scan_code`, `scan_code_type`, `agg_code`, `agg_code_type`,
			`collected_status`, `collected_mark`, `create_time`, `yn`
		)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
			(
				#{item.id, jdbcType=BIGINT},
				#{item.collectionCode, jdbcType=VARCHAR},
				#{item.scanCode, jdbcType=VARCHAR},
				#{item.scanCodeType, jdbcType=VARCHAR},
				#{item.aggCode, jdbcType=VARCHAR},
				#{item.aggCodeType, jdbcType=VARCHAR},
				#{item.collectedStatus, jdbcType=INTEGER},
				#{item.collectedMark, jdbcType=VARCHAR},
				now(), 1
			)
		</foreach>
	</insert>

	<update id="updateCollectionRecordDetail" parameterType="CollectionRecordDetailPo">
		UPDATE
			collection_record_detail
		<set>
			<if test="collectedStatus != null">
				collected_status = #{collectedStatus, jdbcType=INTEGER},
			</if>
			<if test="collectedMark != null">
				collected_mark = #{collectedMark, jdbcType=VARCHAR},
			</if>
			collected_time = NOW()
		</set>
		<where>
			collection_code = #{collectionCode, jdbcType=VARCHAR}
			and scan_code = #{scanCode, jdbcType=VARCHAR}
			and yn = 1
		</where>
	</update>

	<update id="updateDetailInfoByScanCodes" parameterType="java.util.Map">
		UPDATE
			collection_record_detail
		<set>
			<if test="collectedStatus != null">
				collected_status = #{collectedStatus, jdbcType=INTEGER},
				collected_time = NOW(),
			</if>
			<if test="collectedMark != null">
				collected_mark = #{collectedMark, jdbcType=VARCHAR}
			</if>
		</set>
		<where>
			collection_code = #{collectionCode, jdbcType=VARCHAR}
			and scan_code in
			<foreach collection="scanCodes" open="(" item="scanCode" separator="," close=")">
				#{scanCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code = #{aggCode, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and yn = 1
		</where>
	</update>

	<select id="findCollectionRecordDetail" parameterType="CollectionRecordDetailPo"
			resultMap="collectionRecordDetailMap">
		SELECT
			collection_code, scan_code, scan_code_type, agg_code, agg_code_type, collected_status, collected_mark
		FROM
			collection_record_detail
		<where>
			collection_code = #{collectionCode, jdbcType=VARCHAR}
			and scan_code = #{scanCode, jdbcType=VARCHAR}
			<if test="aggCode != null and aggCodeType != null">
				and agg_code = #{aggCode, jdbcType=VARCHAR}
				and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			</if>
			<if test="collectedStatus != null">
				and collected_status = #{collectedStatus, jdbcType=VARCHAR}
			</if>
			and yn = 1
		</where>
	</select>

	<select id="findExistDetails" parameterType="java.util.Map" resultMap="collectionRecordDetailMap">
		SELECT
			collection_code, scan_code, scan_code_type, agg_code, agg_code_type, collected_status, collected_mark
		FROM
			collection_record_detail
		<where>
			collection_code = #{collectionCode, jdbcType=VARCHAR}
			and scan_code in
			<foreach collection="scanCodes" open="(" item="scanCode" separator="," close=")">
				#{scanCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code = #{aggCode, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and yn = 1
		</where>
	</select>

	<select id="getMaxTimeStampByCollectionCodesAndCollectedMark" parameterType="java.util.Map"
			resultType="java.sql.Timestamp">
		SELECT
		 	max(ts)
		FROM
			collection_record_detail
		<where>
			collection_code IN
			<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
				#{collectionCode, jdbcType=VARCHAR}
			</foreach>
			and collected_mark = #{collectedMark, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and yn = 1
		</where>
	</select>

	<select id="getMaxTimeStampByCollectionCodesAndAggCode" parameterType="java.util.Map"
			resultType="java.sql.Timestamp">
		SELECT
			max(ts)
		FROM
			collection_record_detail
		<where>
			collection_code IN
			<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
				#{collectionCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code = #{aggCode, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and yn = 1
		</where>
	</select>

	<select id="countCollectionByAggCodeAndCollectionCodes" parameterType="java.util.Map"
			resultType="com.jd.bluedragon.distribution.collection.entity.CollectionCollectedMarkCounter">
		select
			collection_code as collectionCode,
			collected_status as collectedStatus,
			collected_mark as collectedMark,
			count(1) as number,
			max(ts) as ts
		from
			collection_record_detail
		<where>
			collection_code in
			<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
				#{collectionCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and agg_code = #{aggCode, jdbcType=VARCHAR}
			and yn = 1
		</where>
		group by
			collection_code, collected_status, collected_mark
	</select>

	<select id="findAggCodeByScanCode" parameterType="CollectionRecordDetailPo" resultMap="collectionRecordDetailMap">
		SELECT
			collection_code, agg_code, agg_code_type
		FROM
			collection_record_detail
		<where>
			collection_code = #{collectionCode, jdbcType=VARCHAR}
			and scan_code = #{scanCode, jdbcType=VARCHAR}
			and yn = 1
		</where>
	</select>

	<select id="sumAggCollectionByCollectionCode" parameterType="java.util.Map"
			resultType="com.jd.bluedragon.distribution.collection.entity.CollectionCollectedMarkCounter">
		SELECT
			collection_code as collectionCode,
			agg_code as aggCode,
			collected_mark as collectedMark,
			collected_status as collectedStatus,
			count(1) as number, max(ts) as ts
		FROM
			collection_record_detail
		<where>
			collection_code in
			<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
				#{collectionCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code in
			<foreach collection="aggCodes" open="(" item="aggCode" separator="," close=")">
				#{aggCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and yn = 1
		</where>
		group by
			collection_code, agg_code, collected_status, collected_mark
	</select>

	<select id="queryCollectedDetailByCollectionAndAggCode" parameterType="CollectionRecordPo" resultMap="collectionRecordDetailMap">
		SELECT
			collection_code, agg_code, agg_code_type, scan_code, scan_code_type, collected_status, collected_mark, ts
		FROM
			collection_record_detail
		<where>
			collection_code in
			<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
				#{collectionCode, jdbcType=VARCHAR}
			</foreach>
			and agg_code = #{aggCode, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and yn = 1
		</where>
		order by collected_mark
		limit #{offset, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER}
	</select>

	<select id="getAggCodesByCollectedMark" parameterType="java.util.Map" resultType="java.lang.String">
			SELECT agg_code
			FROM
				collection_record_detail
			WHERE
				yn = 1
				AND collected_mark = #{collectedMark, jdbcType=VARCHAR}
				AND agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
				AND collection_code IN
				<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
					#{collectionCode, jdbcType=VARCHAR}
				</foreach>
			group by agg_code
	</select>


	<select id="findByAggCode" parameterType="java.util.Map" resultMap="collectionRecordDetailMap">
		select	collection_code, agg_code
		from collection_record_detail
		where yn = 1
			and collection_code in
				<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
					#{collectionCode, jdbcType=VARCHAR}
				</foreach>
			and collected_mark = #{collectedMark, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
			and agg_code = #{aggCode, jdbcType=VARCHAR}
		group BY collection_code, agg_code
	</select>


	<select id="findAggCodeByCollectedMark" parameterType="java.util.Map" resultMap="collectionRecordDetailMap">
		select collection_code, agg_code
		from collection_record_detail
		where yn = 1
			and collection_code in
				<foreach collection="collectionCodes" open="(" item="collectionCode" separator="," close=")">
					#{collectionCode, jdbcType=VARCHAR}
				</foreach>
			and collected_mark = #{collectedMark, jdbcType=VARCHAR}
			and agg_code_type = #{aggCodeType, jdbcType=VARCHAR}
		group BY collection_code, agg_code
		limit #{offset, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER}
	</select>


</mapper>