<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.bluedragon.distribution.coldchain.dao.ColdChainSendDao">
    <resultMap id="coldChainSend" type="ColdChainSend">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="waybill_code" jdbcType="VARCHAR" property="waybillCode"/>
        <result column="send_code" jdbcType="VARCHAR" property="sendCode"/>
        <result column="trans_plan_code" jdbcType="VARCHAR" property="transPlanCode"/>
        <result column="create_site_code" jdbcType="INTEGER" property="createSiteCode"/>
        <result column="receive_site_code" jdbcType="INTEGER" property="receiveSiteCode"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="yn" jdbcType="INTEGER" property="yn"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        waybill_code,
        send_code,
        trans_plan_code,
        create_site_code,
        receive_site_code,
        create_time,
        update_time,
        yn
    </sql>

    <insert id="add" parameterType="ColdChainSend">
        INSERT INTO cold_chain_send_waybill(
        waybill_code,
        send_code,
        trans_plan_code,
        create_site_code,
        receive_site_code,
        create_time,
        update_time,
        yn
        )
        VALUES(
        #{waybillCode, jdbcType=VARCHAR},
        #{sendCode, jdbcType=VARCHAR},
        #{transPlanCode, jdbcType=VARCHAR},
        #{createSiteCode, jdbcType=INTEGER},
        #{receiveSiteCode, jdbcType=INTEGER},
        NOW(),
        NOW(),
        1
        )
    </insert>

    <insert id="batchAdd" parameterType="java.util.List">
        INSERT INTO cold_chain_send_waybill(
        waybill_code,
        send_code,
        trans_plan_code,
        create_site_code,
        receive_site_code,
        create_time,
        update_time,
        yn
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.waybillCode, jdbcType=VARCHAR},
            #{item.sendCode, jdbcType=VARCHAR},
            #{item.transPlanCode, jdbcType=VARCHAR},
            #{item.createSiteCode, jdbcType=INTEGER},
            #{item.receiveSiteCode, jdbcType=INTEGER},
            NOW(),
            NOW(),
            1
            )
        </foreach>
    </insert>

    <select id="get" resultMap="coldChainSend" parameterType="ColdChainSend">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cold_chain_send_waybill
        WHERE YN = 1
        <if test="waybillCode != null">
            AND waybill_code = #{waybillCode, jdbcType=VARCHAR}
        </if>
        <if test="sendCode != null">
            AND send_code = #{sendCode, jdbcType=VARCHAR}
        </if>
        <if test="transPlanCode != null">
            AND trans_plan_code = #{transPlanCode, jdbcType=VARCHAR}
        </if>
        ORDER BY create_time DESC
    </select>

</mapper>