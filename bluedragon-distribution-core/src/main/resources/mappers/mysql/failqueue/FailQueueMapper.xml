<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.bluedragon.distribution.failqueue.dao.TaskFailQueueDao">
	<resultMap id="TaskFailQueue"
		type="com.jd.bluedragon.distribution.failqueue.domain.TaskFailQueue">
		<id column="failqueue_id" property="failqueueId" jdbcType="BIGINT" />
		<result column="busi_id" property="busiId" jdbcType="INTEGER" />
		<result column="busi_type" property="busiType" jdbcType="INTEGER" />
		<result column="body" property="body" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="yn" property="yn" jdbcType="INTEGER" />
		<result column="fail_status" property="failStatus" jdbcType="INTEGER" />
		<result column="excute_count" property="excuteCount" jdbcType="INTEGER" />
		<result column="excute_time" property="excuteTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<insert id="add"
		parameterType="com.jd.bluedragon.distribution.failqueue.domain.TaskFailQueue">
		insert into task_failqueue (
			busi_id,busi_type,body,create_time,update_time,
			yn,fail_status,excute_count,excute_time
		)
		values
		(
			#{busiId,jdbcType=INTEGER},
			#{busiType,jdbcType=INTEGER},
			#{body,jdbcType=VARCHAR},
			NOW(),
			NOW(),
			1,
			0,
			0,
			<choose>
				<when test="busiType != null and busiType == 4">
					timestampadd(HOUR,1,NOW())
				</when>
				<otherwise>
					NOW()
				</otherwise>
			</choose>
		)
	</insert>
	<update id="update" parameterType="com.jd.bluedragon.distribution.failqueue.domain.TaskFailQueue">
		update task_failqueue
			set
				busi_type = #{busiType,jdbcType=INTEGER},
				body = #{body,jdbcType=VARCHAR}
		where YN=1 and busi_id = #{busiId,jdbcType=INTEGER}
	</update>
	<update id="updateFail"
		parameterType="java.lang.Long">
		update task_failqueue
			set
				update_time=NOW(),
				excute_count = (excute_count + 1),
				excute_time = timestampadd(minute,15,excute_time),
				fail_status = (case when excute_count = 5 then 4 else 3 end)
		where YN=1 and failqueue_id = #{id}
	</update>
	<update id="updateLock"
		parameterType="java.lang.Long">
		update task_failqueue
			set
				update_time=NOW(),
				fail_status = 1
		where YN=1 and failqueue_id = #{id}
	</update>
	<update id="updateSuccess"
		parameterType="java.lang.Long">
		update task_failqueue
			set
				update_time=NOW(),
				fail_status = 2
		where YN=1 and failqueue_id = #{id}
	</update>
	<select id="query" resultMap="TaskFailQueue"  parameterType="java.util.Map">
		select
			failqueue_id,
			busi_id,busi_type,body,create_time,update_time,
			yn,fail_status,excute_count,excute_time
		from task_failqueue
		where YN=1 AND excute_count <![CDATA[<=]]> 5
			AND excute_time <![CDATA[<=]]> NOW()
			AND fail_status in (0,3)
		
		<if test="busiType != null">
			AND busi_type = #{busiType}
		</if>
		order by failqueue_id
		
		<if test="fetchNum != null">
			LIMIT #{fetchNum}
		</if>
	</select>

	<select id="queryBatch" resultType="long"  parameterType="list">
		select
			busi_id
		from task_failqueue
		where yn = 1 and busi_id in
		<foreach collection="list" item="items" index="index" open="("
					close=")" separator=",">
					#{items,jdbcType=BIGINT}
		</foreach>
	</select>

	<select id="querySendCodeByBusiId" resultType="long"  parameterType="list">
		select
			busi_id
		from task_failqueue
		where yn = 1 and busi_id in
		<foreach collection="list" item="items" index="index" open="("
					close=")" separator=",">
					#{items,jdbcType=BIGINT}
		</foreach>
	</select>

</mapper>