<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.bluedragon.distribution.inspection.dao.InspectionDao">
    <resultMap id="BaseResultMap" type="com.jd.bluedragon.distribution.inspection.domain.Inspection">
        <id column="inspection_id" property="inspectionId" jdbcType="BIGINT"/>
        <result column="waybill_code" property="waybillCode" jdbcType="VARCHAR"/>
        <result column="box_code" property="boxCode" jdbcType="VARCHAR"/>
        <result column="package_barcode" property="packageBarcode" jdbcType="VARCHAR"/>
        <result column="inspection_status" property="status" jdbcType="INTEGER"/>
        <result column="exception_type" property="exceptionType" jdbcType="VARCHAR"/>
        <result column="inspection_type" property="inspectionType" jdbcType="INTEGER"/>
        <result column="operate_type" property="operateType" jdbcType="INTEGER"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_user_code" property="createUserCode" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP"/>
        <result column="create_site_code" property="createSiteCode" jdbcType="INTEGER"/>
        <result column="receive_site_code" property="receiveSiteCode" jdbcType="INTEGER"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="update_user_code" property="updateUserCode" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="yn" property="yn" jdbcType="INTEGER"/>
        <result column="third_waybill_code" property="thirdWaybillCode" jdbcType="VARCHAR"/>
        <result column="pop_flag" property="popFlag" jdbcType="INTEGER"/>
        <result column="pop_sup_id" property="popSupId" jdbcType="INTEGER"/>
        <result column="pop_sup_name" property="popSupName" jdbcType="VARCHAR"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
        <result column="cross_code" property="crossCode" jdbcType="VARCHAR"/>
        <result column="waybill_type" property="waybillType" jdbcType="INTEGER"/>
        <result column="queue_no" property="queueNo" jdbcType="VARCHAR"/>
        <result column="pop_receive_type" property="popReceiveType" jdbcType="INTEGER"/>
        <result column="driver_code" property="driverCode" jdbcType="VARCHAR"/>
        <result column="driver_name" property="driverName" jdbcType="VARCHAR"/>
        <result column="busi_id" property="busiId" jdbcType="INTEGER"/>
        <result column="busi_name" property="busiName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    inspection_id, waybill_code, box_code, 
    package_barcode, inspection_status, exception_type, 
    inspection_type, operate_type, create_user, 
    create_user_code, create_time,operate_time, create_site_code ,
    receive_site_code, update_user, 
    update_user_code, update_time, yn, third_waybill_code, pop_flag,
    pop_sup_id, pop_sup_name, quantity, cross_code, waybill_type, 
    pop_receive_type, queue_no, driver_code, driver_name, busi_id, busi_name
  </sql>
    <sql id="where_condition">
        <where>
            <if test="thirdWaybillCode!= null">
                AND third_waybill_code =#{thirdWaybillCode,jdbcType=VARCHAR}
            </if>
            <if test="inspectionId!=null">
                AND inspection_id = #{inspectionId,jdbcType=INTEGER}
            </if>
            <if test="waybillCode!=null">
                AND waybill_code = #{waybillCode,jdbcType=VARCHAR}
            </if>
            <if test="boxCode!=null">
                AND box_code = #{boxCode,jdbcType=VARCHAR}
            </if>
            <if test="packageBarcode!=null">
                AND package_barcode = #{packageBarcode,jdbcType=VARCHAR}
            </if>
            <if test="status!=null">
                AND inspection_status = #{status,jdbcType=INTEGER}
            </if>
            <if test="exceptionType!=null">
                AND exception_type = #{exceptionType,jdbcType=VARCHAR}
            </if>
            <if test="inspectionType!=null">
                AND inspection_type = #{inspectionType,jdbcType=INTEGER}
            </if>
            <if test="createUser!=null">
                AND create_user = #{createUser,jdbcType=VARCHAR}
            </if>
            <if test="createUserCode!=null">
                AND create_user_code = #{createUserCode,jdbcType=INTEGER}
            </if>
            <if test="createTime!=null">
                AND create_time=#{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createSiteCode!=null">
                AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
            </if>
            <if test="receiveSiteCode!=null">
                AND receive_site_code = #{receiveSiteCode,jdbcType=INTEGER}
            </if>
            <if test="updateUser!=null">
                AND update_user = #{updateUser,jdbcType=VARCHAR}
            </if>
            <if test="updateUserCode!=null">
                AND update_user_code = #{updateUserCode,jdbcType=INTEGER}
            </if>
            <if test="updateTime!=null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="yn!=null">
                AND yn = #{yn,jdbcType=INTEGER}
            </if>
        </where>
    </sql>

    <sql id="Pop_Join_Where_List">
        <where>
            yn = 1
            and inspection_type = 40
            and create_site_code = #{createSiteCode, jdbcType=INTEGER}
            <choose>
                <when test="popReceiveType == null or popReceiveType == 0">
                    and (pop_receive_type is null or pop_receive_type <![CDATA[<>]]> 2)
                </when>
                <otherwise>
                    and pop_receive_type = #{popReceiveType,jdbcType=INTEGER}
                </otherwise>
            </choose>
            <if test="thirdWaybillCode != null and thirdWaybillCode != ''">
                and third_waybill_code =#{thirdWaybillCode,jdbcType=VARCHAR}
            </if>
            <if test="waybillType != null and waybillType != 0">
                and waybill_type = #{waybillType, jdbcType=INTEGER}
            </if>
            and create_time <![CDATA[>=]]> str_to_date(date_format(#{startTime, jdbcType=TIMESTAMP}, '%Y-%m-%d
            %H:%i:%s'), '%Y-%m-%d %H:%i:%s')
            and create_time <![CDATA[<=]]> str_to_date(date_format(#{endTime, jdbcType=TIMESTAMP}, '%Y-%m-%d %H:%i:%s'),
            '%Y-%m-%d %H:%i:%s')
            <if test="popSupId != null and popSupId != 0">
                and pop_sup_id = #{popSupId, jdbcType=INTEGER}
            </if>
            <if test="popSupName != null">
                and pop_sup_name like concat(#{popSupName, jdbcType=VARCHAR},'%')
            </if>
            <if test="createUserCode != null and createUserCode != 0">
                and create_user_code = #{createUserCode,jdbcType=INTEGER}
            </if>
            <if test="createUser != null">
                and create_user like concat(#{createUser, jdbcType=VARCHAR} , '%')
            </if>
            <if test="queueNo != null and queueNo != ''">
                and queue_no = #{queueNo, jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <sql id="BPop_Join_Where_List">
        <where>
            yn = 1
            and (inspection_type = 40 or inspection_type = 60)
            and create_site_code = #{createSiteCode, jdbcType=INTEGER}
            <choose>
                <when test="popReceiveType == null or popReceiveType == 0">
                    and (pop_receive_type is null or (pop_receive_type <![CDATA[<>]]> 2 and pop_receive_type
                    <![CDATA[<>]]> 5))
                </when>
                <otherwise>
                    and pop_receive_type = #{popReceiveType,jdbcType=INTEGER}
                </otherwise>
            </choose>
            <if test="thirdWaybillCode != null and thirdWaybillCode != ''">
                and third_waybill_code =#{thirdWaybillCode,jdbcType=VARCHAR}
            </if>
            <if test="waybillType != null and waybillType != 0">
                and waybill_type = #{waybillType, jdbcType=INTEGER}
            </if>
            and create_time <![CDATA[>=]]> str_to_date(date_format(#{startTime, jdbcType=TIMESTAMP}, '%Y-%m-%d
            %H:%i:%s'), '%Y-%m-%d %H:%i:%s')
            and create_time <![CDATA[<=]]> str_to_date(date_format(#{endTime, jdbcType=TIMESTAMP}, '%Y-%m-%d %H:%i:%s'),
            '%Y-%m-%d %H:%i:%s')
            <if test="popSupId != null and popSupId != 0">
                and pop_sup_id = #{popSupId, jdbcType=INTEGER}
            </if>
            <if test="popSupName != null">
                and pop_sup_name like concat(#{popSupName, jdbcType=VARCHAR}, '%')
            </if>
            <if test="busiId != null and busiId != 0">
                and busi_id = #{busiId, jdbcType=INTEGER}
            </if>
            <if test="busiName != null">
                and busi_name like concat(#{busiName, jdbcType=VARCHAR} , '%')
            </if>
            <if test="createUserCode != null and createUserCode != 0">
                and create_user_code = #{createUserCode,jdbcType=INTEGER}
            </if>
            <if test="createUser != null">
                and create_user like concat(#{createUser, jdbcType=VARCHAR} , '%')
            </if>
            <if test="queueNo != null and queueNo != ''">
                and queue_no = #{queueNo, jdbcType=VARCHAR}
            </if>
            <if test="driverCode != null">
                and driver_code = #{driverCode,jdbcType=VARCHAR},
            </if>
            <if test="driverName != null">
                and driver_name = #{driverName,jdbcType=VARCHAR},
            </if>
        </where>
    </sql>

    <select id="selectSelective" resultMap="BaseResultMap" parameterType="Inspection">
        SELECT
        <include refid="Base_Column_List"/>
        FROM inspection
        <include refid="where_condition"/>
        <if test="limitNo!=null and startNo!=null">
            AND rownum <![CDATA[<=]]> #{limitNo}
        </if>
    </select>

    <select id="selectCountSelective" resultType="java.lang.Integer" parameterType="Inspection">
        SELECT
        count(*)
        FROM inspection
        <include refid="where_condition"/>
    </select>

    <select id="selectCountSelectiveOfSolePackage" resultType="java.lang.Integer" parameterType="Inspection">

        select count(DISTINCT package_barcode)
        FROM inspection
        <include refid="where_condition"/>

    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM inspection
        WHERE inspection_id = #{inspectionId,jdbcType=BIGINT}
    </select>

    <select id="queryListByBox" resultMap="BaseResultMap" parameterType="Inspection">
        SELECT
        <include refid="Base_Column_List"/>
        FROM inspection
        WHERE box_code = #{boxCode,jdbcType=VARCHAR}
        AND inspection_type = #{inspectionType,jdbcType=INTEGER}
        AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        AND receive_site_code = #{receiveSiteCode,jdbcType=INTEGER}
        AND inspection_type=30
        AND yn=1
    </select>

    <select id="inspectionCount" resultType="Integer" parameterType="Inspection">
        SELECT
        COUNT(*)
        FROM inspection
        WHERE box_code = #{boxCode,jdbcType=VARCHAR}
        AND inspection_type = #{inspectionType,jdbcType=INTEGER}
        AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        <if test="null!=receiveSiteCode and ''!=receiveSiteCode">
            AND receive_site_code = #{receiveSiteCode,jdbcType=INTEGER}
        </if>
        AND yn=1
    </select>

    <select id="findPopJoinTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        count(inspection_id)
        from inspection
        <include refid="Pop_Join_Where_List"/>
    </select>

    <select id="findPopJoinList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from inspection
        <include refid="Pop_Join_Where_List"/>
        order by inspection_id
        <if test="startIndex != null">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="findBPopJoinTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        count(inspection_id)
        from inspection
        <include refid="BPop_Join_Where_List"/>
    </select>

    <select id="findBPopJoinList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from inspection
        <include refid="BPop_Join_Where_List"/>
        order by create_time
        <if test="startIndex != null">
            LIMIT #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="findPopByWaybillCodes" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from inspection
        where yn = 1 and inspection_type = 40 and waybill_code in
        <foreach item="waybillCode" index="index" collection="list" open="(" separator="," close=")">
            #{waybillCode}
        </foreach>
        order by inspection_id
    </select>

    <insert id="add" parameterType="Inspection">
        <!--<selectKey resultType="long"  keyProperty="inspectionId" order="BEFORE" statementType="PREPARED">      -->
        <!--<![CDATA[select dms_core_inspection.nextval]]>-->
        <!--</selectKey>-->
        INSERT into inspection (
        <include refid="Base_Column_List"/>
        )
        VALUES (
        #{inspectionId,jdbcType=BIGINT},#{waybillCode,jdbcType=VARCHAR}, #{boxCode,jdbcType=VARCHAR},
        #{packageBarcode,jdbcType=VARCHAR}, 1, #{exceptionType,jdbcType=VARCHAR},
        #{inspectionType,jdbcType=INTEGER}, #{operateType,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR},
        #{createUserCode,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{operateTime,jdbcType=TIMESTAMP},
        #{createSiteCode,jdbcType=INTEGER},
        #{receiveSiteCode,jdbcType=INTEGER}, #{updateUser,jdbcType=VARCHAR},
        #{updateUserCode,jdbcType=INTEGER}, #{createTime, jdbcType=TIMESTAMP}, 1, #{thirdWaybillCode,jdbcType=VARCHAR},
        #{popFlag,jdbcType=INTEGER}, #{popSupId,jdbcType=INTEGER}, #{popSupName,jdbcType=VARCHAR},
        #{quantity,jdbcType=INTEGER}, #{crossCode,jdbcType=VARCHAR}, #{waybillType,jdbcType=INTEGER},
        #{popReceiveType, jdbcType=INTEGER}, #{queueNo,jdbcType=VARCHAR}, #{driverCode, jdbcType=VARCHAR},
        #{driverName,jdbcType=VARCHAR}, #{busiId, jdbcType=INTEGER}, #{busiName, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateByBoxPackageBarcode" parameterType="map">
        UPDATE inspection
        <set>
            <if test="waybillCode != null">
                waybill_code = #{waybillCode,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                inspection_status = #{status,jdbcType=INTEGER},
            </if>
            <if test="exceptionType != null">
                exception_type = #{exceptionType,jdbcType=VARCHAR},
            </if>
            <if test="inspectionType!=null">
                inspection_type = #{inspectionType,jdbcType=INTEGER},
            </if>
            <if test="createSiteCode != null">
                create_site_code = #{createSiteCode,jdbcType=INTEGER},
            </if>
            <if test="receiveSiteCode!=null">
                receive_site_code = #{record.receiveSiteCode,jdbcType=INTEGER},
            </if>
            <if test="updateUser!=null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateUserCode!=null">
                update_user_code = #{updateUserCode,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="yn != null">
                yn = #{yn,jdbcType=INTEGER},
            </if>
        </set>
        WHERE box_code = #{boxCode,jdbcType=VARCHAR} AND package_barcode = #{packageBarcode,jdbcType=VARCHAR}
    </update>
    <update id="update" parameterType="Inspection">
        UPDATE inspection FORCE INDEX(IND_INSPECTION_PCODE_D)
        <set>
            box_code = #{boxCode,jdbcType=VARCHAR},
            exception_type = #{exceptionType,jdbcType=VARCHAR},
            update_user =#{updateUser,jdbcType=VARCHAR},
            update_user_code = #{updateUserCode,jdbcType=INTEGER},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
        </set>
        WHERE yn = 1
        <if test="null!=boxCode and ''!=boxCode">
            AND box_code = #{boxCode}
        </if>
        <if test="null!=operateType">
            AND operate_type = #{operateType,jdbcType=INTEGER}
        </if>
        AND inspection_type = #{inspectionType,jdbcType=INTEGER}
        <if test="null!=waybillCode">
            AND waybill_code = #{waybillCode,jdbcType=VARCHAR}
        </if>
        AND package_barcode = #{packageBarcode,jdbcType=VARCHAR}
        AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        AND receive_site_code = #{receiveSiteCode,jdbcType=INTEGER}
    </update>

    <update id="updatePop" parameterType="Inspection">
        UPDATE inspection
        <set>
            exception_type = #{exceptionType,jdbcType=VARCHAR},
            create_user =#{createUser,jdbcType=VARCHAR},
            create_user_code = #{createUserCode,jdbcType=INTEGER},
            update_user =#{updateUser,jdbcType=VARCHAR},
            update_user_code = #{updateUserCode,jdbcType=INTEGER},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            <if test="thirdWaybillCode != null">
                third_waybill_code = #{thirdWaybillCode,jdbcType=VARCHAR},
            </if>
            <if test="popSupId != null and popSupId != 0">
                pop_sup_id = #{popSupId,jdbcType=INTEGER},
            </if>
            <if test="popSupName != null">
                pop_sup_name = #{popSupName,jdbcType=VARCHAR},
            </if>
            <if test="quantity != null and quantity != 0">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="crossCode != null">
                cross_code = #{crossCode,jdbcType=VARCHAR},
            </if>
            <if test="waybillType != null and waybillType != 0">
                waybill_type = #{waybillType,jdbcType=INTEGER},
            </if>
            <if test="popReceiveType != null">
                pop_receive_type = #{popReceiveType,jdbcType=INTEGER},
            </if>
            <if test="queueNo != null">
                queue_no = #{queueNo,jdbcType=VARCHAR},
            </if>
            <if test="driverCode != null">
                driver_code = #{driverCode,jdbcType=VARCHAR},
            </if>
            <if test="driverName != null">
                driver_name = #{driverName,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE yn = 1
        <choose>
            <when test="inspectionType != null">
                AND inspection_type = #{inspectionType,jdbcType=INTEGER}
            </when>
            <otherwise>
                AND inspection_type = 40
            </otherwise>
        </choose>
        AND waybill_code = #{waybillCode,jdbcType=VARCHAR}
        <if test="createSiteCode != null">
            AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        </if>
        <if test="packageBarcode != null">
            AND package_barcode = #{packageBarcode,jdbcType=VARCHAR}
        </if>
    </update>

    <update id="updateStatusBatchByPrimaryKey" parameterType="list">
        UPDATE inspection
        SET inspection_status=1
        WHERE
        <foreach collection="list" item="record" separator="OR" open="" close="">
            inspection_id = #{record.inspectionId,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateYnByPackage" parameterType="Inspection">
        UPDATE inspection
        SET yn=0, update_user =#{updateUser,jdbcType=VARCHAR}, update_user_code = #{updateUserCode,jdbcType=INTEGER}
        WHERE inspection_type = #{inspectionType,jdbcType=INTEGER}
        AND package_barcode = #{packageBarcode,jdbcType=VARCHAR}
        AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        AND receive_site_code = #{receiveSiteCode,jdbcType=INTEGER}
        <if test=" null!=boxCode and ''!=boxCode ">
            AND box_code = #{boxCode,jdbcType=VARCHAR}
        </if>

    </update>

    <update id="updateYnByPackageFuzzy" parameterType="Inspection">
        UPDATE inspection
        SET yn=0, update_user =#{updateUser,jdbcType=VARCHAR}, update_user_code = #{updateUserCode,jdbcType=INTEGER}
        WHERE inspection_type = #{inspectionType,jdbcType=INTEGER}
        AND package_barcode like #{packageBarcode}
        AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        AND receive_site_code = #{receiveSiteCode,jdbcType=INTEGER}
        <if test=" null!=boxCode and ''!=boxCode ">
            AND box_code = #{boxCode,jdbcType=VARCHAR}
        </if>

    </update>

    <select id="haveInspection" resultMap="BaseResultMap"
            parameterType="Inspection">
        SELECT
        <include refid="Base_Column_List"/>
        FROM Inspection where

        package_barcode = #{packageBarcode,jdbcType=VARCHAR}

        <if test="inspectionType != null and inspectionType==20">
            AND inspection_type = 20
        </if>

        <if test="inspectionType != null and inspectionType==10">
            AND inspection_type != 20
        </if>

        LIMIT 1
    </select>

    <select id="havePOPInspection" resultMap="BaseResultMap"
            parameterType="Inspection">
        SELECT
        <include refid="Base_Column_List"/>
        FROM Inspection where
        waybill_code = #{waybillCode,jdbcType=VARCHAR}
        and package_barcode = #{packageBarcode,jdbcType=VARCHAR}
        <if test="inspectionType != null and inspectionType==4">
            AND inspection_type = 40
        </if>
        <if test="inspectionType != null and inspectionType!=4">
            AND inspection_type = 60
        </if>
        AND create_site_code = #{createSiteCode, jdbcType=INTEGER}
        AND YN=1
        LIMIT 1
    </select>
    <select id="haveInspectionByPackageCode" resultMap="BaseResultMap"
            parameterType="Inspection">
        SELECT
        <include refid="Base_Column_List"/>
        FROM Inspection where
        waybill_code = #{waybillCode,jdbcType=VARCHAR}
        and package_barcode = #{packageBarcode,jdbcType=VARCHAR}
        AND create_site_code = #{createSiteCode, jdbcType=INTEGER}
        AND YN=1
        LIMIT 1
    </select>

    <select id="findPackageBoxCodesByWaybillCode" resultMap="BaseResultMap" parameterType="Inspection">
		SELECT box_code ,package_barcode
		    FROM  inspection
		       WHERE yn=1  AND  waybill_code = #{waybillCode,jdbcType=VARCHAR}   AND create_site_code = #{createSiteCode, jdbcType=INTEGER}
	</select>

    <select id="findOperateTimeByWaybillCodes" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT min(operate_time) as operate_time,waybill_code
        FROM  inspection
        WHERE create_site_code = #{createSiteCode, jdbcType=INTEGER} and yn = 1 and
        waybill_code IN
        <foreach collection="waybillCodes" item="item" index="index" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        group by waybill_code
    </select>

    <select id="findPageInspection" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM inspection
        WHERE yn=1 AND package_barcode = #{packageCode,jdbcType=VARCHAR}
          AND create_site_code = #{createSiteCode,jdbcType=INTEGER}
        ORDER BY operate_time
            limit #{startIndex},#{pageSize}
    </select>

</mapper>