<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.bluedragon.distribution.sorting.dao.SortingReturnDao" >

	<resultMap id="sortingReturn" type="com.jd.bluedragon.distribution.sorting.domain.SortingReturn" >
		<result column="sorting_ret_id" property="id" />
		<result column="waybill_code" property="waybillCode" />
		<result column="package_code" property="packageCode" />
		<result column="create_user_code" property="userCode" />
		<result column="create_user_name" property="userName" />
		<result column="create_site_code" property="siteCode" />
		<result column="create_site_name" property="siteName" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="ret_status" property="status" />
		<result column="yn" property="yn" />
		<result column="ret_type" property="businessType" />
		<result column="shields_error" property="shieldsError" />
		<result column="shields_type" property="shieldsType" />
		<result column="excute_count" property="excuteCount" />
		<result column="excute_time" property="excuteTime" />
	</resultMap>
	
	<insert id="add" parameterType="sortingReturn" >
		INSERT INTO sorting_ret (
			sorting_ret_id, waybill_code, package_code, create_user_code, create_user_name,
			create_site_code, create_site_name, create_time, update_time, ret_status,
			yn,ret_type, shields_error, shields_type, excute_count, excute_time)
		VALUES (
			#{id,jdbcType=BIGINT},#{waybillCode,jdbcType=VARCHAR},
			#{packageCode,jdbcType=VARCHAR}, #{userCode,jdbcType=INTEGER},
			#{userName,jdbcType=VARCHAR}, #{siteCode,jdbcType=INTEGER},
			#{siteName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
			#{updateTime,jdbcType=TIMESTAMP}, 1, 1, #{businessType,jdbcType=INTEGER},
			#{shieldsError,jdbcType=VARCHAR}, #{shieldsType,jdbcType=INTEGER},
			0, NOW())
    </insert>
    
	<update id="update" parameterType="sortingReturn" >
		UPDATE sorting_ret
		SET
            <if test="packageCode != null">
                package_code = #{packageCode,jdbcType=VARCHAR},
            </if>
			create_user_code = #{userCode,jdbcType=INTEGER},
			create_user_name = #{userName,jdbcType=VARCHAR},
			create_site_code = #{siteCode,jdbcType=INTEGER},
			create_site_name = #{siteName,jdbcType=VARCHAR},
			create_time = #{createTime,jdbcType=TIMESTAMP},
			update_time = #{updateTime,jdbcType=TIMESTAMP},
			ret_type = #{businessType,jdbcType=INTEGER},
			shields_error = #{shieldsError,jdbcType=VARCHAR},
			shields_type =  #{shieldsType,jdbcType=INTEGER}
		WHERE yn=1	AND create_site_code = #{siteCode} AND ret_type = #{businessType}
            AND waybill_code = #{waybillCode}
        <if test="packageCode != null">
            AND package_code = #{packageCode}
        </if>

	</update>
	
	<update id="updateStatus" parameterType="sortingReturn" >
		UPDATE sorting_ret
		SET ret_status = #{status,jdbcType=INTEGER},
		    yn = #{yn,jdbcType=INTEGER},
		    update_time = NOW()
		WHERE sorting_ret_id = #{id} 
	</update>

	<update id="updateListStatusSuccess" parameterType="list">
		UPDATE sorting_ret
		SET ret_status = 1,
			update_time = NOW(), 
			excute_count = (excute_count + 1) 
		WHERE sorting_ret_id in 
			<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
				#{item.id,jdbcType=BIGINT}
			</foreach> 
    </update>
    
    <update id="updateListStatusFail" parameterType="list">
		UPDATE sorting_ret
		SET update_time = NOW(), 
			excute_count = (excute_count + 1),
			excute_time = timestampadd(minute, 15, excute_time) 
		WHERE sorting_ret_id in 
			<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
				#{item.id,jdbcType=BIGINT}
			</foreach> 
    </update>

	<select id="get" resultMap="sortingReturn" parameterType="String" >
		SELECT sorting_ret_id, waybill_code, package_code, create_user_code,
		    create_user_name, create_site_code, create_site_name, create_time, update_time,
			ret_status, yn, ret_type, shields_error, shields_type
	    FROM sorting_ret
		WHERE sorting_ret_id = #{id}
			LIMIT 1
    </select>
	
	<select id="exists" resultMap="sortingReturn" parameterType="sortingReturn">
		SELECT sorting_ret_id, waybill_code, package_code, create_user_code,
		    create_user_name, create_site_code, create_site_name, create_time, update_time,
			ret_status, yn, ret_type, shields_error, shields_type
		FROM sorting_ret
		WHERE yn=1 AND ret_type <![CDATA[>]]> -1
		<if test="siteCode != null">
			AND create_site_code = #{siteCode}
		</if>
		AND (
		<if test="waybillCode != null">
			package_code = #{waybillCode}
		</if>
		<if test="packageCode != null">
			or package_code = #{packageCode}
		</if>
		)
		LIMIT 1
	</select>
	
	<select id="findByStatus" resultMap="sortingReturn" parameterType="java.lang.Integer">
		<![CDATA[
			SELECT sorting_ret_id, waybill_code, package_code, create_user_code,
			    create_user_name, create_site_code, create_site_name, create_time, update_time,
				ret_status, yn, ret_type, shields_error, shields_type
			FROM sorting_ret
			WHERE yn=1 AND ret_status = 0 
				AND excute_count < 5 AND excute_time < NOW() 
				LIMIT #{fetchNum}
		]]>
	</select>
</mapper>