<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.bluedragon.distribution.popAbnormal.dao.PopAbnormalDao">
	<resultMap id="popAbnormal"
		type="com.jd.bluedragon.distribution.popAbnormal.domain.PopAbnormal">
		<result column="id" property="id" />
		<result column="serial_number" property="serialNumber" />
		<result column="abnormal_type" property="abnormalType" />
		<result column="waybill_code" property="waybillCode" />
		<result column="order_code" property="orderCode" />
		<result column="pop_sup_no" property="popSupNo" />
		<result column="rsv1" property="popSupName" />
		<result column="current_num" property="currentNum" />
		<result column="actual_num" property="actualNum" />
		<result column="confirm_num" property="confirmNum" />
		<result column="operator_code" property="operatorCode" />
		<result column="operator_name" property="operatorName" />
		<result column="create_site_code" property="createSiteCode" />
		<result column="create_site_name" property="createSiteName" />
		<result column="create_time" property="createTime" />
		<result column="confirm_time" property="confirmTime" />
		<result column="update_time" property="updateTime" />
		<result column="abnormal_state" property="abnormalState" />
		<result column="memo" property="memo" />
		<result column="yn" property="yn" />
	</resultMap>

	<sql id="Base_Column_List">
		id, serial_number, abnormal_type, waybill_code, order_code,
		pop_sup_no, rsv1, current_num, actual_num, confirm_num, operator_code,
		operator_name, create_site_code, create_site_name, create_time, 
		confirm_time, update_time, abnormal_state, memo, yn
	</sql>
	
	<select id="findTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT
			count(id)
		FROM pop_abnormal_order
		<where>
			<if test="popSupNo != null">
				AND pop_sup_no = #{popSupNo, jdbcType=VARCHAR}
			</if>
			<if test="waybillCode != null">
				AND waybill_code = #{waybillCode, jdbcType=VARCHAR}
			</if>
			<if test="startCreateTime != null">
				AND create_time <![CDATA[>=]]> to_date(to_char(#{startCreateTime, jdbcType=TIMESTAMP}, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss')
			</if>
			<if test="endCreateTime != null">
				AND create_time <![CDATA[<=]]> to_date(to_char(#{endCreateTime, jdbcType=TIMESTAMP}, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss')
			</if>
			<if test="abnormalState != null">
				AND abnormal_state = #{abnormalState, jdbcType=INTEGER}
			</if>
			<if test="operatorCode != null">
				AND operator_code = #{operatorCode, jdbcType=INTEGER}
			</if>
			<if test="orderCode != null">
				AND order_code = #{orderCode, jdbcType=VARCHAR}
			</if>
			AND create_site_code = #{createSiteCode, jdbcType=INTEGER}
			AND yn = 1
		</where>
	</select>
	
	<select id="findList" resultMap="popAbnormal" parameterType="java.util.Map">
		<if test="startIndex != null">
			select * from ( select t.*, rownum l from (
		</if>
		SELECT
		<include refid="Base_Column_List" />
		FROM pop_abnormal_order
		<where>
			<if test="popSupNo != null">
				AND pop_sup_no = #{popSupNo, jdbcType=VARCHAR}
			</if>
			<if test="waybillCode != null">
				AND waybill_code = #{waybillCode, jdbcType=VARCHAR}
			</if>
			<if test="startCreateTime != null">
				AND create_time <![CDATA[>=]]> to_date(to_char(#{startCreateTime, jdbcType=TIMESTAMP}, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss')
			</if>
			<if test="endCreateTime != null">
				AND create_time <![CDATA[<=]]> to_date(to_char(#{endCreateTime, jdbcType=TIMESTAMP}, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss')
			</if>
			<if test="abnormalState != null">
				AND abnormal_state = #{abnormalState, jdbcType=INTEGER}
			</if>
			<if test="operatorCode != null">
				AND operator_code = #{operatorCode, jdbcType=INTEGER}
			</if>
			<if test="orderCode != null">
				AND order_code = #{orderCode, jdbcType=VARCHAR}
			</if>
			AND create_site_code = #{createSiteCode, jdbcType=INTEGER}
			AND yn = 1
		</where>
		<if test="orderByString != null">
			ORDER BY ${orderByString} ASC
		</if>
		<if test="startIndex != null">
			) t where <![CDATA[ rownum <= #{endIndex, jdbcType=INTEGER} ]]>
		) where <![CDATA[l >]]> #{startIndex, jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="checkByMap" resultMap="popAbnormal" parameterType="java.util.Map">
    	SELECT
    	<include refid="Base_Column_List" />
	    FROM pop_abnormal_order 
	    <where>
	    	<if test="waybillCode != null">
				AND waybill_code = #{waybillCode, jdbcType=VARCHAR}
			</if>
	    	<if test="orderCode != null">
				AND order_code = #{orderCode, jdbcType=VARCHAR}
			</if>
	    	<if test="serialNumber != null">
				AND serial_number = #{serialNumber, jdbcType=VARCHAR}
			</if>
	    	AND abnormal_state = 1
	    	AND yn = 1
    	</where>
    </select>

	<insert id="add" parameterType="PopAbnormal">
		insert into pop_abnormal_order (
		<include refid="Base_Column_List" />
		)
		values (
		#{id,jdbcType=BIGINT}, #{serialNumber, jdbcType=VARCHAR},
		#{abnormalType, jdbcType=INTEGER},
		#{waybillCode, jdbcType=VARCHAR},
		#{orderCode, jdbcType=VARCHAR}, 
		#{popSupNo, jdbcType=VARCHAR}, #{popSupName, jdbcType=VARCHAR},
		#{currentNum, jdbcType=INTEGER}, #{actualNum, jdbcType=INTEGER},
		#{confirmNum, jdbcType=INTEGER},
		#{operatorCode, jdbcType=INTEGER},
		#{operatorName, jdbcType=VARCHAR},
		#{createSiteCode, jdbcType=INTEGER},
		#{createSiteName, jdbcType=VARCHAR},
		sysdate,
		#{confirmTime, jdbcType=TIMESTAMP}, sysdate, 1,
		#{memo, jdbcType=VARCHAR}, 1
		)
	</insert>

	<update id="updateById" parameterType="PopAbnormal">
		UPDATE pop_abnormal_order
		SET abnormal_state = 2, confirm_num = #{confirmNum, jdbcType=INTEGER},
		confirm_time = #{confirmTime, jdbcType=TIMESTAMP}, update_time = sysdate
		WHERE id = #{id, jdbcType=BIGINT}
		AND yn = 1
	</update>
</mapper>