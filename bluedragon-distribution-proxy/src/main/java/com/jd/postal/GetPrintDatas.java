package com.jd.postal;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2014-11-27T10:31:49.492+08:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "getPrintDatas", 
                  wsdlLocation = "http://os.ems.com.cn:8081/zkweb/services/getPrintDatas?wsdl",
                  targetNamespace = "http://printService.webservice.bigaccount.hollycrm.com") 
public class GetPrintDatas extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://printService.webservice.bigaccount.hollycrm.com", "getPrintDatas");
    public final static QName GetPrintDatasHttpEndpoint = new QName("http://printService.webservice.bigaccount.hollycrm.com", "getPrintDatasHttpEndpoint");
    public final static QName GetPrintDatasHttpSoap11Endpoint = new QName("http://printService.webservice.bigaccount.hollycrm.com", "getPrintDatasHttpSoap11Endpoint");
    public final static QName GetPrintDatasHttpSoap12Endpoint = new QName("http://printService.webservice.bigaccount.hollycrm.com", "getPrintDatasHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://os.ems.com.cn:8081/zkweb/services/getPrintDatas?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(GetPrintDatas.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://os.ems.com.cn:8081/zkweb/services/getPrintDatas?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public GetPrintDatas(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public GetPrintDatas(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GetPrintDatas() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns GetPrintDatasPortType
     */
    @WebEndpoint(name = "getPrintDatasHttpEndpoint")
    public GetPrintDatasPortType getGetPrintDatasHttpEndpoint() {
        return super.getPort(GetPrintDatasHttpEndpoint, GetPrintDatasPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GetPrintDatasPortType
     */
    @WebEndpoint(name = "getPrintDatasHttpEndpoint")
    public GetPrintDatasPortType getGetPrintDatasHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(GetPrintDatasHttpEndpoint, GetPrintDatasPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GetPrintDatasPortType
     */
    @WebEndpoint(name = "getPrintDatasHttpSoap11Endpoint")
    public GetPrintDatasPortType getGetPrintDatasHttpSoap11Endpoint() {
        return super.getPort(GetPrintDatasHttpSoap11Endpoint, GetPrintDatasPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GetPrintDatasPortType
     */
    @WebEndpoint(name = "getPrintDatasHttpSoap11Endpoint")
    public GetPrintDatasPortType getGetPrintDatasHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(GetPrintDatasHttpSoap11Endpoint, GetPrintDatasPortType.class, features);
    }
    /**
     *
     * @return
     *     returns GetPrintDatasPortType
     */
    @WebEndpoint(name = "getPrintDatasHttpSoap12Endpoint")
    public GetPrintDatasPortType getGetPrintDatasHttpSoap12Endpoint() {
        return super.getPort(GetPrintDatasHttpSoap12Endpoint, GetPrintDatasPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GetPrintDatasPortType
     */
    @WebEndpoint(name = "getPrintDatasHttpSoap12Endpoint")
    public GetPrintDatasPortType getGetPrintDatasHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(GetPrintDatasHttpSoap12Endpoint, GetPrintDatasPortType.class, features);
    }

}
