
/*
 * 
 */

package com.jd.wms.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.4
 * Tue Nov 27 10:19:45 CST 2012
 * Generated source version: 2.2.4
 * 
 */


@WebServiceClient(name = "InboundImplService", 
                  wsdlLocation = "http://dtc-ws.360buy.net/services/interfaceInboundWebService?wsdl",
                  targetNamespace = "http://interface-dtc-ws.360buy.com") 
public class InboundImplService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://interface-dtc-ws.360buy.com", "InboundImplService");
    public final static QName InboundImplPort = new QName("http://interface-dtc-ws.360buy.com", "InboundImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://dtc-ws.360buy.net/services/interfaceInboundWebService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://dtc-ws.360buy.net/services/interfaceInboundWebService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public InboundImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InboundImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InboundImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns Inbound
     */
    @WebEndpoint(name = "InboundImplPort")
    public Inbound getInboundImplPort() {
        return super.getPort(InboundImplPort, Inbound.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Inbound
     */
    @WebEndpoint(name = "InboundImplPort")
    public Inbound getInboundImplPort(WebServiceFeature... features) {
        return super.getPort(InboundImplPort, Inbound.class, features);
    }

}
